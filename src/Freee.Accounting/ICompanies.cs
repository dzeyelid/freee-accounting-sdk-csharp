// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Companies operations.
    /// </summary>
    public partial interface ICompanies
    {
        /// <summary>
        /// 事業所一覧の取得
        /// </summary>
        /// <remarks>
        /// ユーザが所属する事業所の一覧を取得する
        /// </remarks>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<ListOKResponse>> ListWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// 事業所の詳細情報の取得
        /// </summary>
        /// <remarks>
        /// ユーザが所属する事業所の詳細を取得する
        /// </remarks>
        /// <param name='id'>
        /// 事業所ID
        /// </param>
        /// <param name='details'>
        /// 取得情報に勘定科目・税区分コード・税区分・品目・取引先・部門・メモタグ・口座の一覧を含める
        /// </param>
        /// <param name='accountItems'>
        /// 取得情報に勘定科目一覧を含める
        /// </param>
        /// <param name='taxes'>
        /// 取得情報に税区分コード・税区分一覧を含める
        /// </param>
        /// <param name='items'>
        /// 取得情報に品目一覧を含める
        /// </param>
        /// <param name='partners'>
        /// 取得情報に取引先一覧を含める
        /// </param>
        /// <param name='sections'>
        /// 取得情報に部門一覧を含める
        /// </param>
        /// <param name='tags'>
        /// 取得情報にメモタグ一覧を含める
        /// </param>
        /// <param name='walletables'>
        /// 取得情報に口座一覧を含める
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<CompaniesShowResponse>> GetWithHttpMessagesAsync(int id, bool? details = default(bool?), bool? accountItems = default(bool?), bool? taxes = default(bool?), bool? items = default(bool?), bool? partners = default(bool?), bool? sections = default(bool?), bool? tags = default(bool?), bool? walletables = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// 事業所情報の更新
        /// </summary>
        /// <remarks>
        /// ユーザが所属する事業所の情報を更新する
        /// </remarks>
        /// <param name='id'>
        /// 事業所ID
        /// </param>
        /// <param name='parameters'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<CompaniesUpdateResponse>> UpdateWithHttpMessagesAsync(int id, UpdateCompanyParams parameters = default(UpdateCompanyParams), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
