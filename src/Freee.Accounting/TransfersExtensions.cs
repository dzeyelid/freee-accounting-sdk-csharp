// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Transfers.
    /// </summary>
    public static partial class TransfersExtensions
    {
            /// <summary>
            /// 取引（振替）一覧の取得
            /// </summary>
            /// <remarks>
            /// 指定した事業所の取引（振替）一覧を取得する
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='companyId'>
            /// 事業所ID
            /// </param>
            /// <param name='startDate'>
            /// 振替日で絞込：開始日 (yyyy-mm-dd)
            /// </param>
            /// <param name='endDate'>
            /// 振替日で絞込：終了日 (yyyy-mm-dd)
            /// </param>
            /// <param name='offset'>
            /// 取得レコードのオフセット (デフォルト: 0)
            /// </param>
            /// <param name='limit'>
            /// 取得レコードの件数 (デフォルト: 20, 最大: 100)
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TransfersIndexResponse> ListAsync(this ITransfers operations, int companyId, string startDate = default(string), string endDate = default(string), int? offset = default(int?), int? limit = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(companyId, startDate, endDate, offset, limit, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// 取引（振替）の作成
            /// </summary>
            /// <remarks>
            /// 指定した事業所の取引（振替）を作成する
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameter'>
            /// 取引（振替）の作成
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TransfersCreateResponse> CreateAsync(this ITransfers operations, Parameter parameter = default(Parameter), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(parameter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
