// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Banks.
    /// </summary>
    public static partial class BanksExtensions
    {
            /// <summary>
            /// 連携サービス一覧の取得
            /// </summary>
            /// <remarks>
            /// 連携しているサービス一覧を取得する
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='offset'>
            /// 開始位置
            /// </param>
            /// <param name='limit'>
            /// 取得上限数,最大500件
            /// </param>
            /// <param name='type'>
            /// サービス種別. Possible values include: 'bank_account', 'credit_card', 'wallet'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<BanksIndexResponse> ListAsync(this IBanks operations, int? offset = default(int?), int? limit = default(int?), string type = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(offset, limit, type, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
