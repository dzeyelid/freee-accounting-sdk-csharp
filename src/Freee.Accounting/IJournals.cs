// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Journals operations.
    /// </summary>
    public partial interface IJournals
    {
        /// <summary>
        /// ダウンロード要求
        /// </summary>
        /// <remarks>
        /// ユーザが所属する事業所の仕訳帳のダウンロードをリクエストします 生成されるファイルに関しては、&lt;a
        /// href="https://support.freee.co.jp/hc/ja/articles/204599604#2"&gt;ヘルプページ&lt;/a&gt;をご参照ください
        /// </remarks>
        /// <param name='downloadType'>
        /// ダウンロード形式. Possible values include: 'csv', 'pdf', 'yayoi', 'generic'
        /// </param>
        /// <param name='companyId'>
        /// 事業所ID
        /// </param>
        /// <param name='visibleTags'>
        /// 補助科目やコメントとして出力する項目
        /// </param>
        /// <param name='startDate'>
        /// 取得開始日 (yyyy-mm-dd)
        /// </param>
        /// <param name='endDate'>
        /// 取得終了日 (yyyy-mm-dd)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<JournalsEnqueueJournalsResponse>> GetWithHttpMessagesAsync(string downloadType, int companyId, IList<string> visibleTags = default(IList<string>), string startDate = default(string), string endDate = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// ステータス確認
        /// </summary>
        /// <remarks>
        /// ダウンロードリクエストのステータスを確認する
        /// </remarks>
        /// <param name='companyId'>
        /// 事業所ID
        /// </param>
        /// <param name='id'>
        /// 受け付けID
        /// </param>
        /// <param name='visibleTags'>
        /// 補助科目やコメントとして出力する項目
        /// </param>
        /// <param name='startDate'>
        /// 取得開始日 (yyyy-mm-dd)
        /// </param>
        /// <param name='endDate'>
        /// 取得終了日 (yyyy-mm-dd)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<JournalsStatusResponse>> GetStatusWithHttpMessagesAsync(int companyId, int id, IList<string> visibleTags = default(IList<string>), string startDate = default(string), string endDate = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// ダウンロード実行
        /// </summary>
        /// <remarks>
        /// ダウンロードを実行する
        /// </remarks>
        /// <param name='id'>
        /// 受け付けID
        /// </param>
        /// <param name='companyId'>
        /// 事業所ID
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        Task<HttpOperationResponse> DownloadWithHttpMessagesAsync(int id, int companyId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
