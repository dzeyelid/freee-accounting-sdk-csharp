// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for TrialBalance.
    /// </summary>
    public static partial class TrialBalanceExtensions
    {
            /// <summary>
            /// 貸借対照表の取得
            /// </summary>
            /// <remarks>
            /// 指定した事業所の貸借対照表を取得する
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='companyId'>
            /// 事業所ID
            /// </param>
            /// <param name='fiscalYear'>
            /// 会計年度
            /// </param>
            /// <param name='startMonth'>
            /// 発生月で絞込：開始会計月(mm)
            /// </param>
            /// <param name='endMonth'>
            /// 発生月で絞込：終了会計月(mm)
            /// </param>
            /// <param name='startDate'>
            /// 発生日で絞込：開始日(yyyy-mm-dd)
            /// </param>
            /// <param name='endDate'>
            /// 発生日で絞込：終了日(yyyy-mm-dd)
            /// </param>
            /// <param name='accountItemDisplayType'>
            /// 勘定科目の表示（勘定科目: account_item, 決算書表示:group）. Possible values include:
            /// 'account_item', 'group'
            /// </param>
            /// <param name='breakdownDisplayType'>
            /// 内訳の表示（取引先: partner, 品目: item, 勘定科目: account_item）
            /// ※勘定科目はaccount_item_display_typeが「group」の時のみ指定できます. Possible values include:
            /// 'partner', 'item', 'account_item'
            /// </param>
            /// <param name='partnerId'>
            /// 取引先IDで絞込（0を指定すると、取引先が未選択で絞り込めます）
            /// </param>
            /// <param name='partnerCode'>
            /// 取引先コードで絞込（事業所設定で取引先コードの利用を有効にしている場合のみ利用可能です）
            /// </param>
            /// <param name='itemId'>
            /// 品目IDで絞込（0を指定すると、品目が未選択で絞り込めます）
            /// </param>
            /// <param name='adjustment'>
            /// 決算整理仕訳で絞込（決算整理仕訳のみ: only, 決算整理仕訳以外: without）. Possible values include:
            /// 'only', 'without'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TrialBsResponse> GetTrialBsAsync(this ITrialBalance operations, int companyId, int? fiscalYear = default(int?), int? startMonth = default(int?), int? endMonth = default(int?), string startDate = default(string), string endDate = default(string), string accountItemDisplayType = default(string), string breakdownDisplayType = default(string), int? partnerId = default(int?), string partnerCode = default(string), int? itemId = default(int?), string adjustment = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTrialBsWithHttpMessagesAsync(companyId, fiscalYear, startMonth, endMonth, startDate, endDate, accountItemDisplayType, breakdownDisplayType, partnerId, partnerCode, itemId, adjustment, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// 貸借対照表(前年比較)の取得
            /// </summary>
            /// <remarks>
            /// 指定した事業所の貸借対照表(前年比較)を取得する
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='companyId'>
            /// 事業所ID
            /// </param>
            /// <param name='fiscalYear'>
            /// 会計年度
            /// </param>
            /// <param name='startMonth'>
            /// 発生月で絞込：開始会計月(mm)
            /// </param>
            /// <param name='endMonth'>
            /// 発生月で絞込：終了会計月(mm)
            /// </param>
            /// <param name='startDate'>
            /// 発生日で絞込：開始日(yyyy-mm-dd)
            /// </param>
            /// <param name='endDate'>
            /// 発生日で絞込：終了日(yyyy-mm-dd)
            /// </param>
            /// <param name='accountItemDisplayType'>
            /// 勘定科目の表示（勘定科目: account_item, 決算書表示:group）. Possible values include:
            /// 'account_item', 'group'
            /// </param>
            /// <param name='breakdownDisplayType'>
            /// 内訳の表示（取引先: partner, 品目: item, 勘定科目: account_item）
            /// ※勘定科目はaccount_item_display_typeが「group」の時のみ指定できます. Possible values include:
            /// 'partner', 'item', 'account_item'
            /// </param>
            /// <param name='partnerId'>
            /// 取引先IDで絞込（0を指定すると、取引先が未選択で絞り込めます）
            /// </param>
            /// <param name='partnerCode'>
            /// 取引先コードで絞込（事業所設定で取引先コードの利用を有効にしている場合のみ利用可能です）
            /// </param>
            /// <param name='itemId'>
            /// 品目IDで絞込（0を指定すると、品目が未選択で絞り込めます）
            /// </param>
            /// <param name='adjustment'>
            /// 決算整理仕訳で絞込（決算整理仕訳のみ: only, 決算整理仕訳以外: without）. Possible values include:
            /// 'only', 'without'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TrialBsTwoYearsResponse> GetTrialBsTwoYearsAsync(this ITrialBalance operations, int companyId, int? fiscalYear = default(int?), int? startMonth = default(int?), int? endMonth = default(int?), string startDate = default(string), string endDate = default(string), string accountItemDisplayType = default(string), string breakdownDisplayType = default(string), int? partnerId = default(int?), string partnerCode = default(string), int? itemId = default(int?), string adjustment = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTrialBsTwoYearsWithHttpMessagesAsync(companyId, fiscalYear, startMonth, endMonth, startDate, endDate, accountItemDisplayType, breakdownDisplayType, partnerId, partnerCode, itemId, adjustment, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// 貸借対照表(３期間比較)の取得
            /// </summary>
            /// <remarks>
            /// 指定した事業所の貸借対照表(３期間比較)を取得する
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='companyId'>
            /// 事業所ID
            /// </param>
            /// <param name='fiscalYear'>
            /// 会計年度
            /// </param>
            /// <param name='startMonth'>
            /// 発生月で絞込：開始会計月(mm)
            /// </param>
            /// <param name='endMonth'>
            /// 発生月で絞込：終了会計月(mm)
            /// </param>
            /// <param name='startDate'>
            /// 発生日で絞込：開始日(yyyy-mm-dd)
            /// </param>
            /// <param name='endDate'>
            /// 発生日で絞込：終了日(yyyy-mm-dd)
            /// </param>
            /// <param name='accountItemDisplayType'>
            /// 勘定科目の表示（勘定科目: account_item, 決算書表示:group）. Possible values include:
            /// 'account_item', 'group'
            /// </param>
            /// <param name='breakdownDisplayType'>
            /// 内訳の表示（取引先: partner, 品目: item, 勘定科目: account_item）
            /// ※勘定科目はaccount_item_display_typeが「group」の時のみ指定できます. Possible values include:
            /// 'partner', 'item', 'account_item'
            /// </param>
            /// <param name='partnerId'>
            /// 取引先IDで絞込（0を指定すると、取引先が未選択で絞り込めます）
            /// </param>
            /// <param name='partnerCode'>
            /// 取引先コードで絞込（事業所設定で取引先コードの利用を有効にしている場合のみ利用可能です）
            /// </param>
            /// <param name='itemId'>
            /// 品目IDで絞込（0を指定すると、品目が未選択で絞り込めます）
            /// </param>
            /// <param name='adjustment'>
            /// 決算整理仕訳で絞込（決算整理仕訳のみ: only, 決算整理仕訳以外: without）. Possible values include:
            /// 'only', 'without'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TrialBsThreeYearsResponse> GetTrialBsThreeYearsAsync(this ITrialBalance operations, int companyId, int? fiscalYear = default(int?), int? startMonth = default(int?), int? endMonth = default(int?), string startDate = default(string), string endDate = default(string), string accountItemDisplayType = default(string), string breakdownDisplayType = default(string), int? partnerId = default(int?), string partnerCode = default(string), int? itemId = default(int?), string adjustment = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTrialBsThreeYearsWithHttpMessagesAsync(companyId, fiscalYear, startMonth, endMonth, startDate, endDate, accountItemDisplayType, breakdownDisplayType, partnerId, partnerCode, itemId, adjustment, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// 損益計算書の取得
            /// </summary>
            /// <remarks>
            /// 指定した事業所の損益計算書を取得する
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='companyId'>
            /// 事業所ID
            /// </param>
            /// <param name='fiscalYear'>
            /// 会計年度
            /// </param>
            /// <param name='startMonth'>
            /// 発生月で絞込：開始会計月(mm)
            /// </param>
            /// <param name='endMonth'>
            /// 発生月で絞込：終了会計月(mm)
            /// </param>
            /// <param name='startDate'>
            /// 発生日で絞込：開始日(yyyy-mm-dd)
            /// </param>
            /// <param name='endDate'>
            /// 発生日で絞込：終了日(yyyy-mm-dd)
            /// </param>
            /// <param name='accountItemDisplayType'>
            /// 勘定科目の表示（勘定科目: account_item, 決算書表示:group）. Possible values include:
            /// 'account_item', 'group'
            /// </param>
            /// <param name='breakdownDisplayType'>
            /// 内訳の表示（取引先: partner, 品目: item, 部門: section, 勘定科目: account_item）
            /// ※勘定科目はaccount_item_display_typeが「group」の時のみ指定できます. Possible values include:
            /// 'partner', 'item', 'section', 'account_item'
            /// </param>
            /// <param name='partnerId'>
            /// 取引先IDで絞込（0を指定すると、取引先が未選択で絞り込めます）
            /// </param>
            /// <param name='partnerCode'>
            /// 取引先コードで絞込（事業所設定で取引先コードの利用を有効にしている場合のみ利用可能です）
            /// </param>
            /// <param name='itemId'>
            /// 品目IDで絞込（0を指定すると、品目が未選択で絞り込めます）
            /// </param>
            /// <param name='sectionId'>
            /// 部門IDで絞込（0を指定すると、部門が未選択で絞り込めます）
            /// </param>
            /// <param name='adjustment'>
            /// 決算整理仕訳で絞込（決算整理仕訳のみ: only, 決算整理仕訳以外: without）. Possible values include:
            /// 'only', 'without'
            /// </param>
            /// <param name='costAllocation'>
            /// 配賦仕訳で絞込（配賦仕訳のみ：only,配賦仕訳以外：without）. Possible values include: 'only',
            /// 'not_include'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TrialPlResponse> GetTrialPlAsync(this ITrialBalance operations, int companyId, int? fiscalYear = default(int?), int? startMonth = default(int?), int? endMonth = default(int?), string startDate = default(string), string endDate = default(string), string accountItemDisplayType = default(string), string breakdownDisplayType = default(string), int? partnerId = default(int?), string partnerCode = default(string), int? itemId = default(int?), int? sectionId = default(int?), string adjustment = default(string), string costAllocation = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTrialPlWithHttpMessagesAsync(companyId, fiscalYear, startMonth, endMonth, startDate, endDate, accountItemDisplayType, breakdownDisplayType, partnerId, partnerCode, itemId, sectionId, adjustment, costAllocation, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// 損益計算書(前年比較)の取得
            /// </summary>
            /// <remarks>
            /// 指定した事業所の損益計算書(前年比較)を取得する
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='companyId'>
            /// 事業所ID
            /// </param>
            /// <param name='fiscalYear'>
            /// 会計年度
            /// </param>
            /// <param name='startMonth'>
            /// 発生月で絞込：開始会計月(mm)
            /// </param>
            /// <param name='endMonth'>
            /// 発生月で絞込：終了会計月(mm)
            /// </param>
            /// <param name='startDate'>
            /// 発生日で絞込：開始日(yyyy-mm-dd)
            /// </param>
            /// <param name='endDate'>
            /// 発生日で絞込：終了日(yyyy-mm-dd)
            /// </param>
            /// <param name='accountItemDisplayType'>
            /// 勘定科目の表示（勘定科目: account_item, 決算書表示:group）. Possible values include:
            /// 'account_item', 'group'
            /// </param>
            /// <param name='breakdownDisplayType'>
            /// 内訳の表示（取引先: partner, 品目: item, 部門: section, 勘定科目: account_item）
            /// ※勘定科目はaccount_item_display_typeが「group」の時のみ指定できます. Possible values include:
            /// 'partner', 'item', 'section', 'account_item'
            /// </param>
            /// <param name='partnerId'>
            /// 取引先IDで絞込（0を指定すると、取引先が未選択で絞り込めます）
            /// </param>
            /// <param name='partnerCode'>
            /// 取引先コードで絞込（事業所設定で取引先コードの利用を有効にしている場合のみ利用可能です）
            /// </param>
            /// <param name='itemId'>
            /// 品目IDで絞込（0を指定すると、品目が未選択で絞り込めます）
            /// </param>
            /// <param name='sectionId'>
            /// 部門IDで絞込（0を指定すると、部門が未選択で絞り込めます）
            /// </param>
            /// <param name='adjustment'>
            /// 決算整理仕訳で絞込（決算整理仕訳のみ: only, 決算整理仕訳以外: without）. Possible values include:
            /// 'only', 'without'
            /// </param>
            /// <param name='costAllocation'>
            /// 配賦仕訳で絞込（配賦仕訳のみ：only,配賦仕訳以外：without）. Possible values include: 'only',
            /// 'not_include'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TrialPlTwoYearsResponse> GetTrialPlTwoYearsAsync(this ITrialBalance operations, int companyId, int? fiscalYear = default(int?), int? startMonth = default(int?), int? endMonth = default(int?), string startDate = default(string), string endDate = default(string), string accountItemDisplayType = default(string), string breakdownDisplayType = default(string), int? partnerId = default(int?), string partnerCode = default(string), int? itemId = default(int?), int? sectionId = default(int?), string adjustment = default(string), string costAllocation = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTrialPlTwoYearsWithHttpMessagesAsync(companyId, fiscalYear, startMonth, endMonth, startDate, endDate, accountItemDisplayType, breakdownDisplayType, partnerId, partnerCode, itemId, sectionId, adjustment, costAllocation, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// 損益計算書(３期間比較)の取得
            /// </summary>
            /// <remarks>
            /// 指定した事業所の損益計算書(３期間比較)を取得する
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='companyId'>
            /// 事業所ID
            /// </param>
            /// <param name='fiscalYear'>
            /// 会計年度
            /// </param>
            /// <param name='startMonth'>
            /// 発生月で絞込：開始会計月(mm)
            /// </param>
            /// <param name='endMonth'>
            /// 発生月で絞込：終了会計月(mm)
            /// </param>
            /// <param name='startDate'>
            /// 発生日で絞込：開始日(yyyy-mm-dd)
            /// </param>
            /// <param name='endDate'>
            /// 発生日で絞込：終了日(yyyy-mm-dd)
            /// </param>
            /// <param name='accountItemDisplayType'>
            /// 勘定科目の表示（勘定科目: account_item, 決算書表示:group）. Possible values include:
            /// 'account_item', 'group'
            /// </param>
            /// <param name='breakdownDisplayType'>
            /// 内訳の表示（取引先: partner, 品目: item, 部門: section, 勘定科目: account_item）
            /// ※勘定科目はaccount_item_display_typeが「group」の時のみ指定できます. Possible values include:
            /// 'partner', 'item', 'section', 'account_item'
            /// </param>
            /// <param name='partnerId'>
            /// 取引先IDで絞込（0を指定すると、取引先が未選択で絞り込めます）
            /// </param>
            /// <param name='partnerCode'>
            /// 取引先コードで絞込（事業所設定で取引先コードの利用を有効にしている場合のみ利用可能です）
            /// </param>
            /// <param name='itemId'>
            /// 品目IDで絞込（0を指定すると、品目が未選択で絞り込めます）
            /// </param>
            /// <param name='sectionId'>
            /// 部門IDで絞込（0を指定すると、部門が未選択で絞り込めます）
            /// </param>
            /// <param name='adjustment'>
            /// 決算整理仕訳で絞込（決算整理仕訳のみ: only, 決算整理仕訳以外: without）. Possible values include:
            /// 'only', 'without'
            /// </param>
            /// <param name='costAllocation'>
            /// 配賦仕訳で絞込（配賦仕訳のみ：only,配賦仕訳以外：without）. Possible values include: 'only',
            /// 'not_include'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TrialPlThreeYearsResponse> GetTrialPlThreeYearsAsync(this ITrialBalance operations, int companyId, int? fiscalYear = default(int?), int? startMonth = default(int?), int? endMonth = default(int?), string startDate = default(string), string endDate = default(string), string accountItemDisplayType = default(string), string breakdownDisplayType = default(string), int? partnerId = default(int?), string partnerCode = default(string), int? itemId = default(int?), int? sectionId = default(int?), string adjustment = default(string), string costAllocation = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTrialPlThreeYearsWithHttpMessagesAsync(companyId, fiscalYear, startMonth, endMonth, startDate, endDate, accountItemDisplayType, breakdownDisplayType, partnerId, partnerCode, itemId, sectionId, adjustment, costAllocation, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// 損益計算書(部門比較)の取得
            /// </summary>
            /// <remarks>
            /// 指定した事業所の損益計算書(部門比較)を取得する
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='companyId'>
            /// 事業所ID
            /// </param>
            /// <param name='sectionIds'>
            /// 出力する部門の指定（半角数字のidを半角カンマ区切りスペースなしで指定してください）
            /// </param>
            /// <param name='fiscalYear'>
            /// 会計年度
            /// </param>
            /// <param name='startMonth'>
            /// 発生月で絞込：開始会計月(mm)
            /// </param>
            /// <param name='endMonth'>
            /// 発生月で絞込：終了会計月(mm)
            /// </param>
            /// <param name='startDate'>
            /// 発生日で絞込：開始日(yyyy-mm-dd)
            /// </param>
            /// <param name='endDate'>
            /// 発生日で絞込：終了日(yyyy-mm-dd)
            /// </param>
            /// <param name='accountItemDisplayType'>
            /// 勘定科目の表示（勘定科目: account_item, 決算書表示:group）. Possible values include:
            /// 'account_item', 'group'
            /// </param>
            /// <param name='breakdownDisplayType'>
            /// 内訳の表示（取引先: partner, 品目: item, 部門: section, 勘定科目: account_item）
            /// ※勘定科目はaccount_item_display_typeが「group」の時のみ指定できます. Possible values include:
            /// 'partner', 'item', 'section', 'account_item'
            /// </param>
            /// <param name='partnerId'>
            /// 取引先IDで絞込（0を指定すると、取引先が未選択で絞り込めます）
            /// </param>
            /// <param name='partnerCode'>
            /// 取引先コードで絞込（事業所設定で取引先コードの利用を有効にしている場合のみ利用可能です）
            /// </param>
            /// <param name='itemId'>
            /// 品目IDで絞込（0を指定すると、品目が未選択で絞り込めます）
            /// </param>
            /// <param name='adjustment'>
            /// 決算整理仕訳で絞込（決算整理仕訳のみ: only, 決算整理仕訳以外: without）. Possible values include:
            /// 'only', 'without'
            /// </param>
            /// <param name='costAllocation'>
            /// 配賦仕訳で絞込（配賦仕訳のみ：only,配賦仕訳以外：without）. Possible values include: 'only',
            /// 'not_include'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TrialPlSectionsResponse> GetTrialPlSectionsAsync(this ITrialBalance operations, int companyId, string sectionIds, int? fiscalYear = default(int?), int? startMonth = default(int?), int? endMonth = default(int?), string startDate = default(string), string endDate = default(string), string accountItemDisplayType = default(string), string breakdownDisplayType = default(string), int? partnerId = default(int?), string partnerCode = default(string), int? itemId = default(int?), string adjustment = default(string), string costAllocation = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTrialPlSectionsWithHttpMessagesAsync(companyId, sectionIds, fiscalYear, startMonth, endMonth, startDate, endDate, accountItemDisplayType, breakdownDisplayType, partnerId, partnerCode, itemId, adjustment, costAllocation, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
