// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// WalletTxnsOperations operations.
    /// </summary>
    public partial interface IWalletTxnsOperations
    {
        /// <summary>
        /// 明細一覧の取得
        /// </summary>
        /// <remarks>
        /// 指定した事業所の明細一覧を取得する
        /// </remarks>
        /// <param name='companyId'>
        /// 事業所ID
        /// </param>
        /// <param name='walletableType'>
        /// 口座区分 (銀行口座: bank_account, クレジットカード: credit_card, 現金: wallet).
        /// Possible values include: 'bank_account', 'credit_card', 'wallet'
        /// </param>
        /// <param name='walletableId'>
        /// 口座ID
        /// </param>
        /// <param name='startDate'>
        /// 取引日で絞込：開始日 (yyyy-mm-dd)
        /// </param>
        /// <param name='endDate'>
        /// 取引日で絞込：終了日 (yyyy-mm-dd)
        /// </param>
        /// <param name='entrySide'>
        /// 入金／出金 (入金: income, 出金: expense). Possible values include: 'income',
        /// 'expense'
        /// </param>
        /// <param name='offset'>
        /// 取得レコードのオフセット (デフォルト: 0)
        /// </param>
        /// <param name='limit'>
        /// 取得レコードの件数 (デフォルト: 20, 最大: 100)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<WalletTxnsIndexResponse>> ListWithHttpMessagesAsync(int companyId, string walletableType = default(string), int? walletableId = default(int?), string startDate = default(string), string endDate = default(string), string entrySide = default(string), int? offset = default(int?), int? limit = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// 明細の作成
        /// </summary>
        /// <remarks>
        /// 指定した事業所の明細を作成する
        /// </remarks>
        /// <param name='parameters'>
        /// 明細の作成
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<WalletTxnsCreateResponse>> CreateWithHttpMessagesAsync(CreateWalletTxnParams parameters = default(CreateWalletTxnParams), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
