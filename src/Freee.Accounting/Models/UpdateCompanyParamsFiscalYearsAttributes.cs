// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UpdateCompanyParamsFiscalYearsAttributes
    {
        /// <summary>
        /// Initializes a new instance of the
        /// UpdateCompanyParamsFiscalYearsAttributes class.
        /// </summary>
        public UpdateCompanyParamsFiscalYearsAttributes()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// UpdateCompanyParamsFiscalYearsAttributes class.
        /// </summary>
        /// <param name="useIndustryTemplate">製造業向け機能（0: 使用しない、1: 使用する）</param>
        /// <param name="indirectWriteOffMethod">固定資産の控除法（0: 直接控除法、1:
        /// 間接控除法）</param>
        /// <param name="indirectWriteOffMethodType">間接控除時の累計額（0: 共通、1:
        /// 資産分類別）</param>
        /// <param name="startDate">期首日</param>
        /// <param name="endDate">期末日（決算日）</param>
        /// <param name="accountingPeriod">期</param>
        /// <param name="depreciationFraction">減価償却端数処理法(法人のみ)(0: 切り捨て、1:
        /// 切り上げ)</param>
        /// <param name="returnCode">不動産所得使用区分(個人事業主のみ)（0: 使用しない、3:
        /// 使用する）</param>
        /// <param name="taxFraction">消費税端数処理方法（0: 切り上げ、1: 切り捨て, 2:
        /// 四捨五入）</param>
        public UpdateCompanyParamsFiscalYearsAttributes(int? useIndustryTemplate = default(int?), int? indirectWriteOffMethod = default(int?), int? indirectWriteOffMethodType = default(int?), string startDate = default(string), string endDate = default(string), int? accountingPeriod = default(int?), int? depreciationFraction = default(int?), int? returnCode = default(int?), int? taxFraction = default(int?))
        {
            UseIndustryTemplate = useIndustryTemplate;
            IndirectWriteOffMethod = indirectWriteOffMethod;
            IndirectWriteOffMethodType = indirectWriteOffMethodType;
            StartDate = startDate;
            EndDate = endDate;
            AccountingPeriod = accountingPeriod;
            DepreciationFraction = depreciationFraction;
            ReturnCode = returnCode;
            TaxFraction = taxFraction;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets 製造業向け機能（0: 使用しない、1: 使用する）
        /// </summary>
        [JsonProperty(PropertyName = "use_industry_template")]
        public int? UseIndustryTemplate { get; set; }

        /// <summary>
        /// Gets or sets 固定資産の控除法（0: 直接控除法、1: 間接控除法）
        /// </summary>
        [JsonProperty(PropertyName = "indirect_write_off_method")]
        public int? IndirectWriteOffMethod { get; set; }

        /// <summary>
        /// Gets or sets 間接控除時の累計額（0: 共通、1: 資産分類別）
        /// </summary>
        [JsonProperty(PropertyName = "indirect_write_off_method_type")]
        public int? IndirectWriteOffMethodType { get; set; }

        /// <summary>
        /// Gets or sets 期首日
        /// </summary>
        [JsonProperty(PropertyName = "start_date")]
        public string StartDate { get; set; }

        /// <summary>
        /// Gets or sets 期末日（決算日）
        /// </summary>
        [JsonProperty(PropertyName = "end_date")]
        public string EndDate { get; set; }

        /// <summary>
        /// Gets or sets 期
        /// </summary>
        [JsonProperty(PropertyName = "accounting_period")]
        public int? AccountingPeriod { get; set; }

        /// <summary>
        /// Gets or sets 減価償却端数処理法(法人のみ)(0: 切り捨て、1: 切り上げ)
        /// </summary>
        [JsonProperty(PropertyName = "depreciation_fraction")]
        public int? DepreciationFraction { get; set; }

        /// <summary>
        /// Gets or sets 不動産所得使用区分(個人事業主のみ)（0: 使用しない、3: 使用する）
        /// </summary>
        [JsonProperty(PropertyName = "return_code")]
        public int? ReturnCode { get; set; }

        /// <summary>
        /// Gets or sets 消費税端数処理方法（0: 切り上げ、1: 切り捨て, 2: 四捨五入）
        /// </summary>
        [JsonProperty(PropertyName = "tax_fraction")]
        public int? TaxFraction { get; set; }

    }
}
