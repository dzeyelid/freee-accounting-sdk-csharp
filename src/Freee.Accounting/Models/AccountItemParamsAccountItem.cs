// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class AccountItemParamsAccountItem
    {
        /// <summary>
        /// Initializes a new instance of the AccountItemParamsAccountItem
        /// class.
        /// </summary>
        public AccountItemParamsAccountItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AccountItemParamsAccountItem
        /// class.
        /// </summary>
        /// <param name="name">勘定科目名 (30文字以内)</param>
        /// <param name="taxName">税区分</param>
        /// <param name="groupName">決算書表示名</param>
        /// <param name="accountCategory">勘定科目カテゴリー</param>
        /// <param name="correspondingIncomeName">収入取引相手勘定科目</param>
        /// <param name="correspondingExpenseName">支出取引相手勘定科目</param>
        /// <param name="shortcut">ショートカット1 (20文字以内)</param>
        /// <param name="shortcutNum">ショートカット2(勘定科目コード)(20文字以内)</param>
        /// <param name="accumulatedDepAccountItemName">減価償却累計額勘定科目</param>
        /// <param name="searchable">検索可能:2, 検索不可：3</param>
        /// <param name="items">品目</param>
        /// <param name="partners">取引先</param>
        public AccountItemParamsAccountItem(string name, string taxName, string groupName, string accountCategory, string correspondingIncomeName, string correspondingExpenseName, string shortcut = default(string), string shortcutNum = default(string), string accumulatedDepAccountItemName = default(string), int? searchable = default(int?), IList<AccountItemParamsAccountItemItemsItem> items = default(IList<AccountItemParamsAccountItemItemsItem>), IList<AccountItemParamsAccountItemPartnersItem> partners = default(IList<AccountItemParamsAccountItemPartnersItem>))
        {
            Name = name;
            Shortcut = shortcut;
            ShortcutNum = shortcutNum;
            TaxName = taxName;
            GroupName = groupName;
            AccountCategory = accountCategory;
            CorrespondingIncomeName = correspondingIncomeName;
            CorrespondingExpenseName = correspondingExpenseName;
            AccumulatedDepAccountItemName = accumulatedDepAccountItemName;
            Searchable = searchable;
            Items = items;
            Partners = partners;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets 勘定科目名 (30文字以内)
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets ショートカット1 (20文字以内)
        /// </summary>
        [JsonProperty(PropertyName = "shortcut")]
        public string Shortcut { get; set; }

        /// <summary>
        /// Gets or sets ショートカット2(勘定科目コード)(20文字以内)
        /// </summary>
        [JsonProperty(PropertyName = "shortcut_num")]
        public string ShortcutNum { get; set; }

        /// <summary>
        /// Gets or sets 税区分
        /// </summary>
        [JsonProperty(PropertyName = "tax_name")]
        public string TaxName { get; set; }

        /// <summary>
        /// Gets or sets 決算書表示名
        /// </summary>
        [JsonProperty(PropertyName = "group_name")]
        public string GroupName { get; set; }

        /// <summary>
        /// Gets or sets 勘定科目カテゴリー
        /// </summary>
        [JsonProperty(PropertyName = "account_category")]
        public string AccountCategory { get; set; }

        /// <summary>
        /// Gets or sets 収入取引相手勘定科目
        /// </summary>
        [JsonProperty(PropertyName = "corresponding_income_name")]
        public string CorrespondingIncomeName { get; set; }

        /// <summary>
        /// Gets or sets 支出取引相手勘定科目
        /// </summary>
        [JsonProperty(PropertyName = "corresponding_expense_name")]
        public string CorrespondingExpenseName { get; set; }

        /// <summary>
        /// Gets or sets 減価償却累計額勘定科目
        /// </summary>
        [JsonProperty(PropertyName = "accumulated_dep_account_item_name")]
        public string AccumulatedDepAccountItemName { get; set; }

        /// <summary>
        /// Gets or sets 検索可能:2, 検索不可：3
        /// </summary>
        [JsonProperty(PropertyName = "searchable")]
        public int? Searchable { get; set; }

        /// <summary>
        /// Gets or sets 品目
        /// </summary>
        [JsonProperty(PropertyName = "items")]
        public IList<AccountItemParamsAccountItemItemsItem> Items { get; set; }

        /// <summary>
        /// Gets or sets 取引先
        /// </summary>
        [JsonProperty(PropertyName = "partners")]
        public IList<AccountItemParamsAccountItemPartnersItem> Partners { get; set; }

    }
}
