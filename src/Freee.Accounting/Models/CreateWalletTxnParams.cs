// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CreateWalletTxnParams
    {
        /// <summary>
        /// Initializes a new instance of the CreateWalletTxnParams class.
        /// </summary>
        public CreateWalletTxnParams()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateWalletTxnParams class.
        /// </summary>
        /// <param name="entrySide">入金／出金 (入金: income, 出金: expense). Possible
        /// values include: 'income', 'expense'</param>
        /// <param name="amount">取引金額</param>
        /// <param name="walletableId">口座ID</param>
        /// <param name="walletableType">口座区分 (銀行口座: bank_account, クレジットカード:
        /// credit_card, 現金: wallet). Possible values include: 'bank_account',
        /// 'credit_card', 'wallet'</param>
        /// <param name="date">取引日 (yyyy-mm-dd)</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="description">備考</param>
        /// <param name="balance">残高 (銀行口座等)</param>
        public CreateWalletTxnParams(string entrySide, int amount, int walletableId, string walletableType, string date, int companyId, string description = default(string), int? balance = default(int?))
        {
            EntrySide = entrySide;
            Description = description;
            Amount = amount;
            WalletableId = walletableId;
            WalletableType = walletableType;
            Date = date;
            CompanyId = companyId;
            Balance = balance;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets 入金／出金 (入金: income, 出金: expense). Possible values
        /// include: 'income', 'expense'
        /// </summary>
        [JsonProperty(PropertyName = "entry_side")]
        public string EntrySide { get; set; }

        /// <summary>
        /// Gets or sets 備考
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets 取引金額
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public int Amount { get; set; }

        /// <summary>
        /// Gets or sets 口座ID
        /// </summary>
        [JsonProperty(PropertyName = "walletable_id")]
        public int WalletableId { get; set; }

        /// <summary>
        /// Gets or sets 口座区分 (銀行口座: bank_account, クレジットカード: credit_card, 現金:
        /// wallet). Possible values include: 'bank_account', 'credit_card',
        /// 'wallet'
        /// </summary>
        [JsonProperty(PropertyName = "walletable_type")]
        public string WalletableType { get; set; }

        /// <summary>
        /// Gets or sets 取引日 (yyyy-mm-dd)
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public string Date { get; set; }

        /// <summary>
        /// Gets or sets 事業所ID
        /// </summary>
        [JsonProperty(PropertyName = "company_id")]
        public int CompanyId { get; set; }

        /// <summary>
        /// Gets or sets 残高 (銀行口座等)
        /// </summary>
        [JsonProperty(PropertyName = "balance")]
        public int? Balance { get; set; }

    }
}
