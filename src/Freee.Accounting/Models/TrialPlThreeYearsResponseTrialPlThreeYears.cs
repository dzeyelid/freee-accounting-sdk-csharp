// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TrialPlThreeYearsResponseTrialPlThreeYears
    {
        /// <summary>
        /// Initializes a new instance of the
        /// TrialPlThreeYearsResponseTrialPlThreeYears class.
        /// </summary>
        public TrialPlThreeYearsResponseTrialPlThreeYears()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// TrialPlThreeYearsResponseTrialPlThreeYears class.
        /// </summary>
        /// <param name="companyId">事業所ID</param>
        /// <param
        /// name="fiscalYear">会計年度(条件に指定した時、または条件に月、日条件がない時のみ含まれる）</param>
        /// <param name="startMonth">発生月で絞込：開始会計月(mm)(条件に指定した時のみ含まれる）</param>
        /// <param name="endMonth">発生月で絞込：終了会計月(mm)(条件に指定した時のみ含まれる）</param>
        /// <param
        /// name="startDate">発生日で絞込：開始日(yyyy-mm-dd)(条件に指定した時のみ含まれる）</param>
        /// <param
        /// name="endDate">発生日で絞込：終了日(yyyy-mm-dd)(条件に指定した時のみ含まれる）</param>
        /// <param name="accountItemDisplayType">勘定科目の表示（勘定科目: account_item,
        /// 決算書表示:group）(条件に指定した時のみ含まれる）. Possible values include:
        /// 'account_item', 'group'</param>
        /// <param name="breakdownDisplayType">内訳の表示（取引先: partner, 品目: item,
        /// 部門: section, 勘定科目: account_item）(条件に指定した時のみ含まれる）. Possible values
        /// include: 'partner', 'item', 'section', 'account_item'</param>
        /// <param name="partnerId">取引先ID(条件に指定した時のみ含まれる）</param>
        /// <param name="partnerCode">取引先コード(条件に指定した時のみ含まれる）</param>
        /// <param name="itemId">品目ID(条件に指定した時のみ含まれる）</param>
        /// <param name="sectionId">部門ID(条件に指定した時のみ含まれる）</param>
        /// <param name="adjustment">決算整理仕訳のみ: only, 決算整理仕訳以外:
        /// without(条件に指定した時のみ含まれる）. Possible values include: 'only',
        /// 'without'</param>
        /// <param
        /// name="costAllocation">配賦仕訳のみ：only,配賦仕訳以外：without(条件に指定した時のみ含まれる）.
        /// Possible values include: 'only', 'without'</param>
        /// <param name="createdAt">作成日時</param>
        public TrialPlThreeYearsResponseTrialPlThreeYears(int companyId, IList<TrialPlThreeYearsResponseTrialPlThreeYearsBalancesItem> balances, int? fiscalYear = default(int?), int? startMonth = default(int?), int? endMonth = default(int?), string startDate = default(string), string endDate = default(string), string accountItemDisplayType = default(string), string breakdownDisplayType = default(string), int? partnerId = default(int?), string partnerCode = default(string), int? itemId = default(int?), int? sectionId = default(int?), string adjustment = default(string), string costAllocation = default(string), string createdAt = default(string))
        {
            CompanyId = companyId;
            FiscalYear = fiscalYear;
            StartMonth = startMonth;
            EndMonth = endMonth;
            StartDate = startDate;
            EndDate = endDate;
            AccountItemDisplayType = accountItemDisplayType;
            BreakdownDisplayType = breakdownDisplayType;
            PartnerId = partnerId;
            PartnerCode = partnerCode;
            ItemId = itemId;
            SectionId = sectionId;
            Adjustment = adjustment;
            CostAllocation = costAllocation;
            CreatedAt = createdAt;
            Balances = balances;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets 事業所ID
        /// </summary>
        [JsonProperty(PropertyName = "company_id")]
        public int CompanyId { get; set; }

        /// <summary>
        /// Gets or sets 会計年度(条件に指定した時、または条件に月、日条件がない時のみ含まれる）
        /// </summary>
        [JsonProperty(PropertyName = "fiscal_year")]
        public int? FiscalYear { get; set; }

        /// <summary>
        /// Gets or sets 発生月で絞込：開始会計月(mm)(条件に指定した時のみ含まれる）
        /// </summary>
        [JsonProperty(PropertyName = "start_month")]
        public int? StartMonth { get; set; }

        /// <summary>
        /// Gets or sets 発生月で絞込：終了会計月(mm)(条件に指定した時のみ含まれる）
        /// </summary>
        [JsonProperty(PropertyName = "end_month")]
        public int? EndMonth { get; set; }

        /// <summary>
        /// Gets or sets 発生日で絞込：開始日(yyyy-mm-dd)(条件に指定した時のみ含まれる）
        /// </summary>
        [JsonProperty(PropertyName = "start_date")]
        public string StartDate { get; set; }

        /// <summary>
        /// Gets or sets 発生日で絞込：終了日(yyyy-mm-dd)(条件に指定した時のみ含まれる）
        /// </summary>
        [JsonProperty(PropertyName = "end_date")]
        public string EndDate { get; set; }

        /// <summary>
        /// Gets or sets 勘定科目の表示（勘定科目: account_item,
        /// 決算書表示:group）(条件に指定した時のみ含まれる）. Possible values include:
        /// 'account_item', 'group'
        /// </summary>
        [JsonProperty(PropertyName = "account_item_display_type")]
        public string AccountItemDisplayType { get; set; }

        /// <summary>
        /// Gets or sets 内訳の表示（取引先: partner, 品目: item, 部門: section, 勘定科目:
        /// account_item）(条件に指定した時のみ含まれる）. Possible values include: 'partner',
        /// 'item', 'section', 'account_item'
        /// </summary>
        [JsonProperty(PropertyName = "breakdown_display_type")]
        public string BreakdownDisplayType { get; set; }

        /// <summary>
        /// Gets or sets 取引先ID(条件に指定した時のみ含まれる）
        /// </summary>
        [JsonProperty(PropertyName = "partner_id")]
        public int? PartnerId { get; set; }

        /// <summary>
        /// Gets or sets 取引先コード(条件に指定した時のみ含まれる）
        /// </summary>
        [JsonProperty(PropertyName = "partner_code")]
        public string PartnerCode { get; set; }

        /// <summary>
        /// Gets or sets 品目ID(条件に指定した時のみ含まれる）
        /// </summary>
        [JsonProperty(PropertyName = "item_id")]
        public int? ItemId { get; set; }

        /// <summary>
        /// Gets or sets 部門ID(条件に指定した時のみ含まれる）
        /// </summary>
        [JsonProperty(PropertyName = "section_id")]
        public int? SectionId { get; set; }

        /// <summary>
        /// Gets or sets 決算整理仕訳のみ: only, 決算整理仕訳以外: without(条件に指定した時のみ含まれる）.
        /// Possible values include: 'only', 'without'
        /// </summary>
        [JsonProperty(PropertyName = "adjustment")]
        public string Adjustment { get; set; }

        /// <summary>
        /// Gets or sets 配賦仕訳のみ：only,配賦仕訳以外：without(条件に指定した時のみ含まれる）. Possible
        /// values include: 'only', 'without'
        /// </summary>
        [JsonProperty(PropertyName = "cost_allocation")]
        public string CostAllocation { get; set; }

        /// <summary>
        /// Gets or sets 作成日時
        /// </summary>
        [JsonProperty(PropertyName = "created_at")]
        public string CreatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "balances")]
        public IList<TrialPlThreeYearsResponseTrialPlThreeYearsBalancesItem> Balances { get; set; }

    }
}
