// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CompaniesShowResponseCompany
    {
        /// <summary>
        /// Initializes a new instance of the CompaniesShowResponseCompany
        /// class.
        /// </summary>
        public CompaniesShowResponseCompany()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CompaniesShowResponseCompany
        /// class.
        /// </summary>
        /// <param name="id">事業所ID</param>
        /// <param name="name">事業所の正式名称 (100文字以内)</param>
        /// <param name="nameKana">正式名称フリガナ (100文字以内)</param>
        /// <param name="displayName">事業所名</param>
        /// <param name="taxAtSourceCalcType">源泉徴収税計算（0: 消費税を含める、1:
        /// 消費税を含めない）</param>
        /// <param name="contactName">担当者名 (50文字以内)</param>
        /// <param name="headCount">従業員数（0: 経営者のみ、1: 2~5人、2: 6~10人、3: 11~20人、4:
        /// 21~30人、5: 31~40人、6: 41~100人、7: 100人以上</param>
        /// <param name="corporateNumber">法人番号 (半角数字13桁、法人のみ)</param>
        /// <param name="txnNumberFormat">仕訳番号形式（not_used: 使用しない、digits:
        /// 数字（例：5091824）、alnum: 英数字（例：59J0P））. Possible values include:
        /// 'not_used', 'digits', 'alnum'</param>
        /// <param name="privateSettlement">プライベート資金/役員資金（false: 使用しない、true:
        /// 使用する）</param>
        /// <param name="minusFormat">マイナスの表示方法（0: -、 1: △）</param>
        /// <param name="role">ユーザーの権限. Possible values include: 'admin',
        /// 'simple_accounting', 'self_only', 'read_only'</param>
        /// <param name="phone1">電話番号１</param>
        /// <param name="phone2">電話番号２</param>
        /// <param name="fax">FAX</param>
        /// <param name="zipcode">郵便番号</param>
        /// <param name="prefectureCode">都道府県コード（0:
        /// 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄</param>
        /// <param name="streetName1">市区町村・番地</param>
        /// <param name="streetName2">建物名・部屋番号など</param>
        /// <param name="invoiceLayout">レイアウト(0: レイアウト1, 1:レイアウト2, 3:封筒1,
        /// 4:レイアウト3(繰越金額欄あり), 5: 封筒2(繰越金額欄あり))</param>
        /// <param name="invoiceStyle">スタイル(0: クラシック, 1: モダン)</param>
        /// <param name="amountFraction">金額端数処理方法（0: 切り捨て、1: 切り上げ、2:
        /// 四捨五入）</param>
        /// <param name="industryClass">種別（agriculture_forestry_fisheries_ore:
        /// 農林水産業/鉱業、construction: 建設、manufacturing_processing: 製造/加工、it:
        /// IT、transportation_logistics: 運輸/物流、retail_wholesale:
        /// 小売/卸売、finance_insurance: 金融/保険、real_estate_rental:
        /// 不動産/レンタル、profession: 士業/学術/専門技術サービス、design_production:
        /// デザイン/制作、food: 飲食、leisure_entertainment: レジャー/娯楽、lifestyle:
        /// 生活関連サービス、education: 教育/学習支援、medical_welfare: 医療/福祉、other_services:
        /// その他サービス、other: その他）. Possible values include: '',
        /// 'agriculture_forestry_fisheries_ore', 'construction',
        /// 'manufacturing_processing', 'it', 'transportation_logistics',
        /// 'retail_wholesale', 'finance_insurance', 'real_estate_rental',
        /// 'profession', 'design_production', 'food', 'lifestyle',
        /// 'education', 'medical_welfare', 'other_services', 'other'</param>
        /// <param name="industryCode">コード（transport_delivery:
        /// 輸送業/配送業、delivery: バイク便等の配達業、other_transportation_logistics:
        /// その他の運輸業、物流業）. Possible values include: '', 'transport_delivery',
        /// 'delivery', 'other_transportation_logistics'</param>
        /// <param name="workflowSetting">仕訳承認フロー（enable: 有効、 disable: 無効）.
        /// Possible values include: 'enable', 'disable'</param>
        /// <param name="usePartnerCode">取引先コードの利用設定（true: 有効、 false:
        /// 無効）</param>
        /// <param name="defaultWalletAccountId">決済口座のデフォルト</param>
        public CompaniesShowResponseCompany(int id, string name, string nameKana, string displayName, int taxAtSourceCalcType, string contactName, int? headCount, string corporateNumber, string txnNumberFormat, bool privateSettlement, int minusFormat, string role, string phone1, string phone2, string fax, string zipcode, int prefectureCode, string streetName1, string streetName2, int invoiceLayout, int invoiceStyle, int amountFraction, string industryClass, string industryCode, string workflowSetting, bool usePartnerCode, int? defaultWalletAccountId = default(int?))
        {
            Id = id;
            Name = name;
            NameKana = nameKana;
            DisplayName = displayName;
            TaxAtSourceCalcType = taxAtSourceCalcType;
            ContactName = contactName;
            HeadCount = headCount;
            CorporateNumber = corporateNumber;
            TxnNumberFormat = txnNumberFormat;
            DefaultWalletAccountId = defaultWalletAccountId;
            PrivateSettlement = privateSettlement;
            MinusFormat = minusFormat;
            Role = role;
            Phone1 = phone1;
            Phone2 = phone2;
            Fax = fax;
            Zipcode = zipcode;
            PrefectureCode = prefectureCode;
            StreetName1 = streetName1;
            StreetName2 = streetName2;
            InvoiceLayout = invoiceLayout;
            InvoiceStyle = invoiceStyle;
            AmountFraction = amountFraction;
            IndustryClass = industryClass;
            IndustryCode = industryCode;
            WorkflowSetting = workflowSetting;
            UsePartnerCode = usePartnerCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets 事業所ID
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets 事業所の正式名称 (100文字以内)
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets 正式名称フリガナ (100文字以内)
        /// </summary>
        [JsonProperty(PropertyName = "name_kana")]
        public string NameKana { get; set; }

        /// <summary>
        /// Gets or sets 事業所名
        /// </summary>
        [JsonProperty(PropertyName = "display_name")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets 源泉徴収税計算（0: 消費税を含める、1: 消費税を含めない）
        /// </summary>
        [JsonProperty(PropertyName = "tax_at_source_calc_type")]
        public int TaxAtSourceCalcType { get; set; }

        /// <summary>
        /// Gets or sets 担当者名 (50文字以内)
        /// </summary>
        [JsonProperty(PropertyName = "contact_name")]
        public string ContactName { get; set; }

        /// <summary>
        /// Gets or sets 従業員数（0: 経営者のみ、1: 2~5人、2: 6~10人、3: 11~20人、4: 21~30人、5:
        /// 31~40人、6: 41~100人、7: 100人以上
        /// </summary>
        [JsonProperty(PropertyName = "head_count")]
        public int? HeadCount { get; set; }

        /// <summary>
        /// Gets or sets 法人番号 (半角数字13桁、法人のみ)
        /// </summary>
        [JsonProperty(PropertyName = "corporate_number")]
        public string CorporateNumber { get; set; }

        /// <summary>
        /// Gets or sets 仕訳番号形式（not_used: 使用しない、digits: 数字（例：5091824）、alnum:
        /// 英数字（例：59J0P））. Possible values include: 'not_used', 'digits',
        /// 'alnum'
        /// </summary>
        [JsonProperty(PropertyName = "txn_number_format")]
        public string TxnNumberFormat { get; set; }

        /// <summary>
        /// Gets or sets 決済口座のデフォルト
        /// </summary>
        [JsonProperty(PropertyName = "default_wallet_account_id")]
        public int? DefaultWalletAccountId { get; set; }

        /// <summary>
        /// Gets or sets プライベート資金/役員資金（false: 使用しない、true: 使用する）
        /// </summary>
        [JsonProperty(PropertyName = "private_settlement")]
        public bool PrivateSettlement { get; set; }

        /// <summary>
        /// Gets or sets マイナスの表示方法（0: -、 1: △）
        /// </summary>
        [JsonProperty(PropertyName = "minus_format")]
        public int MinusFormat { get; set; }

        /// <summary>
        /// Gets or sets ユーザーの権限. Possible values include: 'admin',
        /// 'simple_accounting', 'self_only', 'read_only'
        /// </summary>
        [JsonProperty(PropertyName = "role")]
        public string Role { get; set; }

        /// <summary>
        /// Gets or sets 電話番号１
        /// </summary>
        [JsonProperty(PropertyName = "phone1")]
        public string Phone1 { get; set; }

        /// <summary>
        /// Gets or sets 電話番号２
        /// </summary>
        [JsonProperty(PropertyName = "phone2")]
        public string Phone2 { get; set; }

        /// <summary>
        /// Gets or sets FAX
        /// </summary>
        [JsonProperty(PropertyName = "fax")]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or sets 郵便番号
        /// </summary>
        [JsonProperty(PropertyName = "zipcode")]
        public string Zipcode { get; set; }

        /// <summary>
        /// Gets or sets 都道府県コード（0:
        /// 北海道、1:青森、2:岩手、3:宮城、4:秋田、5:山形、6:福島、7:茨城、8:栃木、9:群馬、10:埼玉、11:千葉、12:東京、13:神奈川、14:新潟、15:富山、16:石川、17:福井、18:山梨、19:長野、20:岐阜、21:静岡、22:愛知、23:三重、24:滋賀、25:京都、26:大阪、27:兵庫、28:奈良、29:和歌山、30:鳥取、31:島根、32:岡山、33:広島、34:山口、35:徳島、36:香川、37:愛媛、38:高知、39:福岡、40:佐賀、41:長崎、42:熊本、43:大分、44:宮崎、45:鹿児島、46:沖縄
        /// </summary>
        [JsonProperty(PropertyName = "prefecture_code")]
        public int PrefectureCode { get; set; }

        /// <summary>
        /// Gets or sets 市区町村・番地
        /// </summary>
        [JsonProperty(PropertyName = "street_name1")]
        public string StreetName1 { get; set; }

        /// <summary>
        /// Gets or sets 建物名・部屋番号など
        /// </summary>
        [JsonProperty(PropertyName = "street_name2")]
        public string StreetName2 { get; set; }

        /// <summary>
        /// Gets or sets レイアウト(0: レイアウト1, 1:レイアウト2, 3:封筒1, 4:レイアウト3(繰越金額欄あり),
        /// 5: 封筒2(繰越金額欄あり))
        /// </summary>
        [JsonProperty(PropertyName = "invoice_layout")]
        public int InvoiceLayout { get; set; }

        /// <summary>
        /// Gets or sets スタイル(0: クラシック, 1: モダン)
        /// </summary>
        [JsonProperty(PropertyName = "invoice_style")]
        public int InvoiceStyle { get; set; }

        /// <summary>
        /// Gets or sets 金額端数処理方法（0: 切り捨て、1: 切り上げ、2: 四捨五入）
        /// </summary>
        [JsonProperty(PropertyName = "amount_fraction")]
        public int AmountFraction { get; set; }

        /// <summary>
        /// Gets or sets 種別（agriculture_forestry_fisheries_ore:
        /// 農林水産業/鉱業、construction: 建設、manufacturing_processing: 製造/加工、it:
        /// IT、transportation_logistics: 運輸/物流、retail_wholesale:
        /// 小売/卸売、finance_insurance: 金融/保険、real_estate_rental:
        /// 不動産/レンタル、profession: 士業/学術/専門技術サービス、design_production:
        /// デザイン/制作、food: 飲食、leisure_entertainment: レジャー/娯楽、lifestyle:
        /// 生活関連サービス、education: 教育/学習支援、medical_welfare: 医療/福祉、other_services:
        /// その他サービス、other: その他）. Possible values include: '',
        /// 'agriculture_forestry_fisheries_ore', 'construction',
        /// 'manufacturing_processing', 'it', 'transportation_logistics',
        /// 'retail_wholesale', 'finance_insurance', 'real_estate_rental',
        /// 'profession', 'design_production', 'food', 'lifestyle',
        /// 'education', 'medical_welfare', 'other_services', 'other'
        /// </summary>
        [JsonProperty(PropertyName = "industry_class")]
        public string IndustryClass { get; set; }

        /// <summary>
        /// Gets or sets コード（transport_delivery: 輸送業/配送業、delivery:
        /// バイク便等の配達業、other_transportation_logistics: その他の運輸業、物流業）. Possible
        /// values include: '', 'transport_delivery', 'delivery',
        /// 'other_transportation_logistics'
        /// </summary>
        [JsonProperty(PropertyName = "industry_code")]
        public string IndustryCode { get; set; }

        /// <summary>
        /// Gets or sets 仕訳承認フロー（enable: 有効、 disable: 無効）. Possible values
        /// include: 'enable', 'disable'
        /// </summary>
        [JsonProperty(PropertyName = "workflow_setting")]
        public string WorkflowSetting { get; set; }

        /// <summary>
        /// Gets or sets 取引先コードの利用設定（true: 有効、 false: 無効）
        /// </summary>
        [JsonProperty(PropertyName = "use_partner_code")]
        public bool UsePartnerCode { get; set; }

    }
}
