// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UpdateCompanyParams
    {
        /// <summary>
        /// Initializes a new instance of the UpdateCompanyParams class.
        /// </summary>
        public UpdateCompanyParams()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateCompanyParams class.
        /// </summary>
        /// <param name="name">事業所の正式名称 (100文字以内)</param>
        /// <param name="nameKana">正式名称フリガナ (100文字以内)</param>
        /// <param name="contactName">user1</param>
        /// <param name="phone1">電話番号１</param>
        /// <param name="phone2">電話番号２</param>
        /// <param name="fax">FAX</param>
        /// <param name="headCount">従業員数（0: 経営者のみ、1: 2~5人、2: 6~10人、3: 11~20人、4:
        /// 21~30人、5: 31~40人、6: 41~100人、7: 100人以上</param>
        /// <param name="corporateNumber">法人番号 (半角数字13桁、法人のみ)</param>
        /// <param name="txnNumberFormat">仕訳番号形式（not_used: 使用しない、digits:
        /// 数字（例：5091824）、alnum: 英数字（例：59J0P））Available values : not_used,
        /// digits, alnum. Possible values include: 'not_used', 'digits',
        /// 'alnum'</param>
        /// <param name="privateSettlement">プライベート資金/役員資金（0: 使用しない、1:
        /// 使用する）</param>
        public UpdateCompanyParams(string name = default(string), string nameKana = default(string), string contactName = default(string), UpdateCompanyParamsAddressAttributes addressAttributes = default(UpdateCompanyParamsAddressAttributes), string phone1 = default(string), string phone2 = default(string), string fax = default(string), UpdateCompanyParamsSalesInformationAttributes salesInformationAttributes = default(UpdateCompanyParamsSalesInformationAttributes), double? headCount = default(double?), string corporateNumber = default(string), UpdateCompanyParamsFiscalYearsAttributes fiscalYearsAttributes = default(UpdateCompanyParamsFiscalYearsAttributes), UpdateCompanyParamsDocTemplate docTemplate = default(UpdateCompanyParamsDocTemplate), string txnNumberFormat = default(string), int? privateSettlement = default(int?))
        {
            Name = name;
            NameKana = nameKana;
            ContactName = contactName;
            AddressAttributes = addressAttributes;
            Phone1 = phone1;
            Phone2 = phone2;
            Fax = fax;
            SalesInformationAttributes = salesInformationAttributes;
            HeadCount = headCount;
            CorporateNumber = corporateNumber;
            FiscalYearsAttributes = fiscalYearsAttributes;
            DocTemplate = docTemplate;
            TxnNumberFormat = txnNumberFormat;
            PrivateSettlement = privateSettlement;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets 事業所の正式名称 (100文字以内)
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets 正式名称フリガナ (100文字以内)
        /// </summary>
        [JsonProperty(PropertyName = "name_kana")]
        public string NameKana { get; set; }

        /// <summary>
        /// Gets or sets user1
        /// </summary>
        [JsonProperty(PropertyName = "contact_name")]
        public string ContactName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address_attributes")]
        public UpdateCompanyParamsAddressAttributes AddressAttributes { get; set; }

        /// <summary>
        /// Gets or sets 電話番号１
        /// </summary>
        [JsonProperty(PropertyName = "phone1")]
        public string Phone1 { get; set; }

        /// <summary>
        /// Gets or sets 電話番号２
        /// </summary>
        [JsonProperty(PropertyName = "phone2")]
        public string Phone2 { get; set; }

        /// <summary>
        /// Gets or sets FAX
        /// </summary>
        [JsonProperty(PropertyName = "fax")]
        public string Fax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sales_information_attributes")]
        public UpdateCompanyParamsSalesInformationAttributes SalesInformationAttributes { get; set; }

        /// <summary>
        /// Gets or sets 従業員数（0: 経営者のみ、1: 2~5人、2: 6~10人、3: 11~20人、4: 21~30人、5:
        /// 31~40人、6: 41~100人、7: 100人以上
        /// </summary>
        [JsonProperty(PropertyName = "head_count")]
        public double? HeadCount { get; set; }

        /// <summary>
        /// Gets or sets 法人番号 (半角数字13桁、法人のみ)
        /// </summary>
        [JsonProperty(PropertyName = "corporate_number")]
        public string CorporateNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fiscal_years_attributes")]
        public UpdateCompanyParamsFiscalYearsAttributes FiscalYearsAttributes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "doc_template")]
        public UpdateCompanyParamsDocTemplate DocTemplate { get; set; }

        /// <summary>
        /// Gets or sets 仕訳番号形式（not_used: 使用しない、digits: 数字（例：5091824）、alnum:
        /// 英数字（例：59J0P））Available values : not_used, digits, alnum. Possible
        /// values include: 'not_used', 'digits', 'alnum'
        /// </summary>
        [JsonProperty(PropertyName = "txn_number_format")]
        public string TxnNumberFormat { get; set; }

        /// <summary>
        /// Gets or sets プライベート資金/役員資金（0: 使用しない、1: 使用する）
        /// </summary>
        [JsonProperty(PropertyName = "private_settlement")]
        public int? PrivateSettlement { get; set; }

    }
}
