// <auto-generated>
// Copyright (c) freee K.K. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license
// information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
//
// </auto-generated>

namespace Freee.Accounting
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Receipts operations.
    /// </summary>
    public partial interface IReceipts
    {
        /// <summary>
        /// ファイルボックス 証憑ファイルアップロード
        /// </summary>
        /// <remarks>
        /// ファイルボックスに証憑ファイルをアップロードする
        /// </remarks>
        /// <param name='companyId'>
        /// 事業所ID
        /// </param>
        /// <param name='receipt'>
        /// 証憑ファイル
        /// </param>
        /// <param name='description'>
        /// メモ (255文字以内)
        /// </param>
        /// <param name='issueDate'>
        /// 取引日 (yyyy-mm-dd)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<ReceiptCreateResponse>> CreateWithHttpMessagesAsync(int companyId, Stream receipt, string description = default(string), string issueDate = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
