/* 
 * freee API
 *
 *  <h1 id=\"freee_api\">freee API</h1> <hr /> <h2 id=\"start_guide\">スタートガイド</h2>  <p>freee API開発がはじめての方は<a href=\"https://developer.freee.co.jp/getting-started\">freee API スタートガイド</a>を参照してください。</p>  <hr /> <h2 id=\"specification\">仕様</h2>  <pre><code>【重要】会計freee APIの新バージョンについて 2020年12月まで、2つのバージョンが利用できる状態です。古いものは2020年12月に利用不可となります。<br> 新しいAPIを利用するにはリクエストヘッダーに以下を指定します。 X-Api-Version: 2020-06-15<br> 指定がない場合は2020年12月に廃止予定のAPIを利用することとなります。<br> 【重要】APIのバージョン指定をせずに利用し続ける場合 2020年12月に新しいバージョンのAPIに自動的に切り替わります。 詳細は、<a href=\"https://developer.freee.co.jp/release-note/2948\" target=\"_blank\">リリースノート</a>をご覧ください。<br> 旧バージョンのAPIリファレンスを確認したい場合は、<a href=\"https://freee.github.io/freee-api-schema/\" target=\"_blank\">旧バージョンのAPIリファレンスページ</a>をご覧ください。 </code></pre>  <h3 id=\"api_endpoint\">APIエンドポイント</h3>  <p>https://api.freee.co.jp/ (httpsのみ)</p>  <h3 id=\"about_authorize\">認証について</h3> <p>OAuth2.0を利用します。詳細は<a href=\"https://developer.freee.co.jp/docs\" target=\"_blank\">ドキュメントの認証</a>パートを参照してください。</p>  <h3 id=\"data_format\">データフォーマット</h3>  <p>リクエスト、レスポンスともにJSON形式をサポートしていますが、詳細は、API毎の説明欄（application/jsonなど）を確認してください。</p>  <h3 id=\"compatibility\">後方互換性ありの変更</h3>  <p>freeeでは、APIを改善していくために以下のような変更は後方互換性ありとして通知なく変更を入れることがあります。アプリケーション実装者は以下を踏まえて開発を行ってください。</p>  <ul> <li>新しいAPIリソース・エンドポイントの追加</li> <li>既存のAPIに対して必須ではない新しいリクエストパラメータの追加</li> <li>既存のAPIレスポンスに対する新しいプロパティの追加</li> <li>既存のAPIレスポンスに対するプロパティの順番の入れ変え</li> <li>keyとなっているidやcodeの長さの変更（長くする）</li> </ul>  <h3 id=\"common_response_header\">共通レスポンスヘッダー</h3>  <p>すべてのAPIのレスポンスには以下のHTTPヘッダーが含まれます。</p>  <ul> <li> <p>X-Freee-Request-ID</p> <ul> <li>各リクエスト毎に発行されるID</li> </ul> </li> </ul>  <h3 id=\"common_error_response\">共通エラーレスポンス</h3>  <ul> <li> <p>ステータスコードはレスポンス内のJSONに含まれる他、HTTPヘッダにも含まれる</p> </li> <li> <p>一部のエラーレスポンスにはエラーコードが含まれます。<br>詳細は、<a href=\"https://developer.freee.co.jp/tips/faq/40x-checkpoint\">HTTPステータスコード400台エラー時のチェックポイント</a>を参照してください</p> </li> <p>type</p>  <ul> <li>status : HTTPステータスコードの説明</li>  <li>validation : エラーの詳細の説明（開発者向け）</li> </ul> </li> </ul>  <p>レスポンスの例</p>  <pre><code>  {     &quot;status_code&quot; : 400,     &quot;errors&quot; : [       {         &quot;type&quot; : &quot;status&quot;,         &quot;messages&quot; : [&quot;不正なリクエストです。&quot;]       },       {         &quot;type&quot; : &quot;validation&quot;,         &quot;messages&quot; : [&quot;Date は不正な日付フォーマットです。入力例：2013-01-01&quot;]       }     ]   }</code></pre>  </br>  <h3 id=\"api_rate_limit\">API使用制限</h3>    <p>freeeは一定期間に過度のアクセスを検知した場合、APIアクセスをコントロールする場合があります。</p>   <p>その際のhttp status codeは403となります。制限がかかってから10分程度が過ぎると再度使用することができるようになります。</p>  <h4 id=\"reports_api_endpoint\">/reportsエンドポイント</h4>  <p>freeeは/reportsエンドポイントに対して1秒間に10以上のアクセスを検知した場合、APIアクセスをコントロールする場合があります。その際のhttp status codeは429（too many requests）となります。</p>  <p>レスポンスボディのmetaプロパティに以下を含めます。</p>  <ul>   <li>設定されている上限値</li>   <li>上限に達するまでの使用可能回数</li>   <li>（上限値に達した場合）使用回数がリセットされる時刻</li> </ul>  <h3 id=\"plan_api_rate_limit\">プラン別のAPI Rate Limit</h3>   <table border=\"1\">     <tbody>       <tr>         <th style=\"padding: 10px\"><strong>会計freeeプラン名</strong></th>         <th style=\"padding: 10px\"><strong>事業所とアプリケーション毎に1日でのAPIコール数</strong></th>       </tr>       <tr>         <td style=\"padding: 10px\">エンタープライズ</td>         <td style=\"padding: 10px\">10,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">プロフェッショナル</td>         <td style=\"padding: 10px\">5,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ベーシック</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">ミニマム</td>         <td style=\"padding: 10px\">3,000</td>       </tr>       <tr>         <td style=\"padding: 10px\">上記以外</td>         <td style=\"padding: 10px\">3,000</td>       </tr>     </tbody>   </table>  <h3 id=\"webhook\">Webhookについて</h3>  <p>詳細は<a href=\"https://developer.freee.co.jp/docs/accounting/webhook\" target=\"_blank\">会計Webhook概要</a>を参照してください。</p>  <hr /> <h2 id=\"contact\">連絡先</h2>  <p>ご不明点、ご要望等は <a href=\"https://support.freee.co.jp/hc/ja/requests/new\">freee サポートデスクへのお問い合わせフォーム</a> からご連絡ください。</p> <hr />&copy; Since 2013 freee K.K.
 *
 * The version of the OpenAPI document: v1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Freee.Accounting.Client;
using Freee.Accounting.Models;

namespace Freee.Accounting.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IApprovalRequestsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 各種申請の作成
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を作成する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を作成することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、申請フォームで設定された項目のIDとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で作成ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本API利用前に各種申請の取得APIを利用し、最新の申請フォームを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="approvalRequestCreateParams">各種申請の作成 (optional)</param>
        /// <returns>ApprovalRequestResponse</returns>
        ApprovalRequestResponse CreateApprovalRequest (ApprovalRequestCreateParams approvalRequestCreateParams = default(ApprovalRequestCreateParams));

        /// <summary>
        /// 各種申請の作成
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を作成する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を作成することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、申請フォームで設定された項目のIDとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で作成ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本API利用前に各種申請の取得APIを利用し、最新の申請フォームを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="approvalRequestCreateParams">各種申請の作成 (optional)</param>
        /// <returns>ApiResponse of ApprovalRequestResponse</returns>
        ApiResponse<ApprovalRequestResponse> CreateApprovalRequestWithHttpInfo (ApprovalRequestCreateParams approvalRequestCreateParams = default(ApprovalRequestCreateParams));
        /// <summary>
        /// 各種申請の削除
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を削除する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns></returns>
        void DestroyApprovalRequest (int id, int companyId);

        /// <summary>
        /// 各種申請の削除
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を削除する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DestroyApprovalRequestWithHttpInfo (int id, int companyId);
        /// <summary>
        /// 各種申請の取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApprovalRequestResponse</returns>
        ApprovalRequestResponse GetApprovalRequest (int id, int companyId);

        /// <summary>
        /// 各種申請の取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApiResponse of ApprovalRequestResponse</returns>
        ApiResponse<ApprovalRequestResponse> GetApprovalRequestWithHttpInfo (int id, int companyId);
        /// <summary>
        /// 各種申請の申請フォームの取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォームを取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">申請フォームID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApprovalRequestFormResponse</returns>
        ApprovalRequestFormResponse GetApprovalRequestForm (int id, int companyId);

        /// <summary>
        /// 各種申請の申請フォームの取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォームを取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">申請フォームID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApiResponse of ApprovalRequestFormResponse</returns>
        ApiResponse<ApprovalRequestFormResponse> GetApprovalRequestFormWithHttpInfo (int id, int companyId);
        /// <summary>
        /// 各種申請の申請フォーム一覧の取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォーム一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <returns>InlineResponse200</returns>
        InlineResponse200 GetApprovalRequestForms (int companyId);

        /// <summary>
        /// 各種申請の申請フォーム一覧の取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォーム一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApiResponse of InlineResponse200</returns>
        ApiResponse<InlineResponse200> GetApprovalRequestFormsWithHttpInfo (int companyId);
        /// <summary>
        /// 各種申請の一覧
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の一覧を取得することができます。&lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="status">申請ステータス(draft:下書き, in_progress:申請中, approved:承認済, rejected:却下, feedback:差戻し) (optional)</param>
        /// <param name="applicationNumber">申請No. (optional)</param>
        /// <param name="title">申請タイトル (optional)</param>
        /// <param name="formId">申請フォームID (optional)</param>
        /// <param name="startApplicationDate">申請日で絞込：開始日(yyyy-mm-dd) (optional)</param>
        /// <param name="endApplicationDate">申請日で絞込：終了日(yyyy-mm-dd) (optional)</param>
        /// <param name="applicantId">申請者のユーザーID (optional)</param>
        /// <param name="approverId">承認者のユーザーID (optional)</param>
        /// <param name="offset">取得レコードのオフセット (デフォルト: 0) (optional)</param>
        /// <param name="limit">取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 500) (optional)</param>
        /// <returns>ApprovalRequestsIndexResponse</returns>
        ApprovalRequestsIndexResponse GetApprovalRequests (int companyId, string status = default(string), int? applicationNumber = default(int?), string title = default(string), int? formId = default(int?), string startApplicationDate = default(string), string endApplicationDate = default(string), int? applicantId = default(int?), int? approverId = default(int?), int? offset = default(int?), int? limit = default(int?));

        /// <summary>
        /// 各種申請の一覧
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の一覧を取得することができます。&lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="status">申請ステータス(draft:下書き, in_progress:申請中, approved:承認済, rejected:却下, feedback:差戻し) (optional)</param>
        /// <param name="applicationNumber">申請No. (optional)</param>
        /// <param name="title">申請タイトル (optional)</param>
        /// <param name="formId">申請フォームID (optional)</param>
        /// <param name="startApplicationDate">申請日で絞込：開始日(yyyy-mm-dd) (optional)</param>
        /// <param name="endApplicationDate">申請日で絞込：終了日(yyyy-mm-dd) (optional)</param>
        /// <param name="applicantId">申請者のユーザーID (optional)</param>
        /// <param name="approverId">承認者のユーザーID (optional)</param>
        /// <param name="offset">取得レコードのオフセット (デフォルト: 0) (optional)</param>
        /// <param name="limit">取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 500) (optional)</param>
        /// <returns>ApiResponse of ApprovalRequestsIndexResponse</returns>
        ApiResponse<ApprovalRequestsIndexResponse> GetApprovalRequestsWithHttpInfo (int companyId, string status = default(string), int? applicationNumber = default(int?), string title = default(string), int? formId = default(int?), string startApplicationDate = default(string), string endApplicationDate = default(string), int? applicantId = default(int?), int? approverId = default(int?), int? offset = default(int?), int? limit = default(int?));
        /// <summary>
        /// 各種申請の更新
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を更新する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を更新することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、各種申請の取得APIで取得したrequest_items.idとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIでは、status(申請ステータス): draft:下書き, feedback:差戻しのみ更新可能です。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で更新ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本APIで使用する項目IDは申請作成時点の項目IDです。本API利用前に各種申請の取得APIを利用し、申請作成時点の項目IDを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestUpdateParams">各種申請の更新</param>
        /// <returns>ApprovalRequestResponse</returns>
        ApprovalRequestResponse UpdateApprovalRequest (int id, ApprovalRequestUpdateParams approvalRequestUpdateParams);

        /// <summary>
        /// 各種申請の更新
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を更新する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を更新することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、各種申請の取得APIで取得したrequest_items.idとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIでは、status(申請ステータス): draft:下書き, feedback:差戻しのみ更新可能です。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で更新ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本APIで使用する項目IDは申請作成時点の項目IDです。本API利用前に各種申請の取得APIを利用し、申請作成時点の項目IDを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestUpdateParams">各種申請の更新</param>
        /// <returns>ApiResponse of ApprovalRequestResponse</returns>
        ApiResponse<ApprovalRequestResponse> UpdateApprovalRequestWithHttpInfo (int id, ApprovalRequestUpdateParams approvalRequestUpdateParams);
        /// <summary>
        /// 各種申請の承認操作
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の承認操作を行う&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）を行うことができます。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; 　&lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請はAPI経由で承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestActionCreateParams">各種申請の承認操作</param>
        /// <returns>ApprovalRequestResponse</returns>
        ApprovalRequestResponse UpdateApprovalRequestAction (int id, ApprovalRequestActionCreateParams approvalRequestActionCreateParams);

        /// <summary>
        /// 各種申請の承認操作
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の承認操作を行う&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）を行うことができます。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; 　&lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請はAPI経由で承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestActionCreateParams">各種申請の承認操作</param>
        /// <returns>ApiResponse of ApprovalRequestResponse</returns>
        ApiResponse<ApprovalRequestResponse> UpdateApprovalRequestActionWithHttpInfo (int id, ApprovalRequestActionCreateParams approvalRequestActionCreateParams);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IApprovalRequestsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 各種申請の作成
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を作成する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を作成することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、申請フォームで設定された項目のIDとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で作成ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本API利用前に各種申請の取得APIを利用し、最新の申請フォームを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="approvalRequestCreateParams">各種申請の作成 (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestResponse</returns>
        System.Threading.Tasks.Task<ApprovalRequestResponse> CreateApprovalRequestAsync (ApprovalRequestCreateParams approvalRequestCreateParams = default(ApprovalRequestCreateParams), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 各種申請の作成
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を作成する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を作成することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、申請フォームで設定された項目のIDとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で作成ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本API利用前に各種申請の取得APIを利用し、最新の申請フォームを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="approvalRequestCreateParams">各種申請の作成 (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApprovalRequestResponse>> CreateApprovalRequestWithHttpInfoAsync (ApprovalRequestCreateParams approvalRequestCreateParams = default(ApprovalRequestCreateParams), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 各種申請の削除
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を削除する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DestroyApprovalRequestAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 各種申請の削除
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を削除する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DestroyApprovalRequestWithHttpInfoAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 各種申請の取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestResponse</returns>
        System.Threading.Tasks.Task<ApprovalRequestResponse> GetApprovalRequestAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 各種申請の取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApprovalRequestResponse>> GetApprovalRequestWithHttpInfoAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 各種申請の申請フォームの取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォームを取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">申請フォームID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestFormResponse</returns>
        System.Threading.Tasks.Task<ApprovalRequestFormResponse> GetApprovalRequestFormAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 各種申請の申請フォームの取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォームを取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">申請フォームID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestFormResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApprovalRequestFormResponse>> GetApprovalRequestFormWithHttpInfoAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 各種申請の申請フォーム一覧の取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォーム一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InlineResponse200</returns>
        System.Threading.Tasks.Task<InlineResponse200> GetApprovalRequestFormsAsync (int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 各種申請の申請フォーム一覧の取得
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォーム一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InlineResponse200)</returns>
        System.Threading.Tasks.Task<ApiResponse<InlineResponse200>> GetApprovalRequestFormsWithHttpInfoAsync (int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 各種申請の一覧
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の一覧を取得することができます。&lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="status">申請ステータス(draft:下書き, in_progress:申請中, approved:承認済, rejected:却下, feedback:差戻し) (optional)</param>
        /// <param name="applicationNumber">申請No. (optional)</param>
        /// <param name="title">申請タイトル (optional)</param>
        /// <param name="formId">申請フォームID (optional)</param>
        /// <param name="startApplicationDate">申請日で絞込：開始日(yyyy-mm-dd) (optional)</param>
        /// <param name="endApplicationDate">申請日で絞込：終了日(yyyy-mm-dd) (optional)</param>
        /// <param name="applicantId">申請者のユーザーID (optional)</param>
        /// <param name="approverId">承認者のユーザーID (optional)</param>
        /// <param name="offset">取得レコードのオフセット (デフォルト: 0) (optional)</param>
        /// <param name="limit">取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 500) (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestsIndexResponse</returns>
        System.Threading.Tasks.Task<ApprovalRequestsIndexResponse> GetApprovalRequestsAsync (int companyId, string status = default(string), int? applicationNumber = default(int?), string title = default(string), int? formId = default(int?), string startApplicationDate = default(string), string endApplicationDate = default(string), int? applicantId = default(int?), int? approverId = default(int?), int? offset = default(int?), int? limit = default(int?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 各種申請の一覧
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の一覧を取得することができます。&lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="status">申請ステータス(draft:下書き, in_progress:申請中, approved:承認済, rejected:却下, feedback:差戻し) (optional)</param>
        /// <param name="applicationNumber">申請No. (optional)</param>
        /// <param name="title">申請タイトル (optional)</param>
        /// <param name="formId">申請フォームID (optional)</param>
        /// <param name="startApplicationDate">申請日で絞込：開始日(yyyy-mm-dd) (optional)</param>
        /// <param name="endApplicationDate">申請日で絞込：終了日(yyyy-mm-dd) (optional)</param>
        /// <param name="applicantId">申請者のユーザーID (optional)</param>
        /// <param name="approverId">承認者のユーザーID (optional)</param>
        /// <param name="offset">取得レコードのオフセット (デフォルト: 0) (optional)</param>
        /// <param name="limit">取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 500) (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestsIndexResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApprovalRequestsIndexResponse>> GetApprovalRequestsWithHttpInfoAsync (int companyId, string status = default(string), int? applicationNumber = default(int?), string title = default(string), int? formId = default(int?), string startApplicationDate = default(string), string endApplicationDate = default(string), int? applicantId = default(int?), int? approverId = default(int?), int? offset = default(int?), int? limit = default(int?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 各種申請の更新
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を更新する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を更新することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、各種申請の取得APIで取得したrequest_items.idとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIでは、status(申請ステータス): draft:下書き, feedback:差戻しのみ更新可能です。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で更新ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本APIで使用する項目IDは申請作成時点の項目IDです。本API利用前に各種申請の取得APIを利用し、申請作成時点の項目IDを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestUpdateParams">各種申請の更新</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestResponse</returns>
        System.Threading.Tasks.Task<ApprovalRequestResponse> UpdateApprovalRequestAsync (int id, ApprovalRequestUpdateParams approvalRequestUpdateParams, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 各種申請の更新
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を更新する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を更新することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、各種申請の取得APIで取得したrequest_items.idとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIでは、status(申請ステータス): draft:下書き, feedback:差戻しのみ更新可能です。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で更新ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本APIで使用する項目IDは申請作成時点の項目IDです。本API利用前に各種申請の取得APIを利用し、申請作成時点の項目IDを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestUpdateParams">各種申請の更新</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApprovalRequestResponse>> UpdateApprovalRequestWithHttpInfoAsync (int id, ApprovalRequestUpdateParams approvalRequestUpdateParams, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 各種申請の承認操作
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の承認操作を行う&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）を行うことができます。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; 　&lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請はAPI経由で承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestActionCreateParams">各種申請の承認操作</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestResponse</returns>
        System.Threading.Tasks.Task<ApprovalRequestResponse> UpdateApprovalRequestActionAsync (int id, ApprovalRequestActionCreateParams approvalRequestActionCreateParams, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 各種申請の承認操作
        /// </summary>
        /// <remarks>
        ///  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の承認操作を行う&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）を行うことができます。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; 　&lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請はAPI経由で承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </remarks>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestActionCreateParams">各種申請の承認操作</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ApprovalRequestResponse>> UpdateApprovalRequestActionWithHttpInfoAsync (int id, ApprovalRequestActionCreateParams approvalRequestActionCreateParams, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IApprovalRequestsApi : IApprovalRequestsApiSync, IApprovalRequestsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ApprovalRequestsApi : IApprovalRequestsApi
    {
        private Freee.Accounting.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalRequestsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ApprovalRequestsApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalRequestsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ApprovalRequestsApi(String basePath)
        {
            this.Configuration = Freee.Accounting.Client.Configuration.MergeConfigurations(
                Freee.Accounting.Client.GlobalConfiguration.Instance,
                new Freee.Accounting.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Freee.Accounting.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Freee.Accounting.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Freee.Accounting.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalRequestsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ApprovalRequestsApi(Freee.Accounting.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Freee.Accounting.Client.Configuration.MergeConfigurations(
                Freee.Accounting.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Freee.Accounting.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Freee.Accounting.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Freee.Accounting.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ApprovalRequestsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ApprovalRequestsApi(Freee.Accounting.Client.ISynchronousClient client,Freee.Accounting.Client.IAsynchronousClient asyncClient, Freee.Accounting.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Freee.Accounting.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Freee.Accounting.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Freee.Accounting.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Freee.Accounting.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Freee.Accounting.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 各種申請の作成  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を作成する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を作成することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、申請フォームで設定された項目のIDとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で作成ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本API利用前に各種申請の取得APIを利用し、最新の申請フォームを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="approvalRequestCreateParams">各種申請の作成 (optional)</param>
        /// <returns>ApprovalRequestResponse</returns>
        public ApprovalRequestResponse CreateApprovalRequest (ApprovalRequestCreateParams approvalRequestCreateParams = default(ApprovalRequestCreateParams))
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse> localVarResponse = CreateApprovalRequestWithHttpInfo(approvalRequestCreateParams);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の作成  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を作成する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を作成することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、申請フォームで設定された項目のIDとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で作成ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本API利用前に各種申請の取得APIを利用し、最新の申請フォームを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="approvalRequestCreateParams">各種申請の作成 (optional)</param>
        /// <returns>ApiResponse of ApprovalRequestResponse</returns>
        public Freee.Accounting.Client.ApiResponse< ApprovalRequestResponse > CreateApprovalRequestWithHttpInfo (ApprovalRequestCreateParams approvalRequestCreateParams = default(ApprovalRequestCreateParams))
        {
            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json", 
                "application/x-www-form-urlencoded"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = approvalRequestCreateParams;

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post< ApprovalRequestResponse >("/api/1/approval_requests", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateApprovalRequest", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の作成  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を作成する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を作成することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、申請フォームで設定された項目のIDとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で作成ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本API利用前に各種申請の取得APIを利用し、最新の申請フォームを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="approvalRequestCreateParams">各種申請の作成 (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestResponse</returns>
        public async System.Threading.Tasks.Task<ApprovalRequestResponse> CreateApprovalRequestAsync (ApprovalRequestCreateParams approvalRequestCreateParams = default(ApprovalRequestCreateParams), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse> localVarResponse = await CreateApprovalRequestWithHttpInfoAsync(approvalRequestCreateParams, cancellationToken);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の作成  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を作成する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を作成することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、申請フォームで設定された項目のIDとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で作成ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本API利用前に各種申請の取得APIを利用し、最新の申請フォームを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="approvalRequestCreateParams">各種申請の作成 (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestResponse)</returns>
        public async System.Threading.Tasks.Task<Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse>> CreateApprovalRequestWithHttpInfoAsync (ApprovalRequestCreateParams approvalRequestCreateParams = default(ApprovalRequestCreateParams), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json", 
                "application/x-www-form-urlencoded"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            
            localVarRequestOptions.Data = approvalRequestCreateParams;

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<ApprovalRequestResponse>("/api/1/approval_requests", localVarRequestOptions, this.Configuration, cancellationToken);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreateApprovalRequest", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の削除  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を削除する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns></returns>
        public void DestroyApprovalRequest (int id, int companyId)
        {
             DestroyApprovalRequestWithHttpInfo(id, companyId);
        }

        /// <summary>
        /// 各種申請の削除  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を削除する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Freee.Accounting.Client.ApiResponse<Object> DestroyApprovalRequestWithHttpInfo (int id, int companyId)
        {
            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", Freee.Accounting.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "company_id", companyId));

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/api/1/approval_requests/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DestroyApprovalRequest", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の削除  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を削除する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DestroyApprovalRequestAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
             await DestroyApprovalRequestWithHttpInfoAsync(id, companyId, cancellationToken);
        }

        /// <summary>
        /// 各種申請の削除  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を削除する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Freee.Accounting.Client.ApiResponse<Object>> DestroyApprovalRequestWithHttpInfoAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            
            localVarRequestOptions.PathParameters.Add("id", Freee.Accounting.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "company_id", companyId));

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/api/1/approval_requests/{id}", localVarRequestOptions, this.Configuration, cancellationToken);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DestroyApprovalRequest", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の取得  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApprovalRequestResponse</returns>
        public ApprovalRequestResponse GetApprovalRequest (int id, int companyId)
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse> localVarResponse = GetApprovalRequestWithHttpInfo(id, companyId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の取得  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApiResponse of ApprovalRequestResponse</returns>
        public Freee.Accounting.Client.ApiResponse< ApprovalRequestResponse > GetApprovalRequestWithHttpInfo (int id, int companyId)
        {
            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", Freee.Accounting.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "company_id", companyId));

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get< ApprovalRequestResponse >("/api/1/approval_requests/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetApprovalRequest", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の取得  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestResponse</returns>
        public async System.Threading.Tasks.Task<ApprovalRequestResponse> GetApprovalRequestAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse> localVarResponse = await GetApprovalRequestWithHttpInfoAsync(id, companyId, cancellationToken);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の取得  &lt;h2 id&#x3D;\&quot;\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestResponse)</returns>
        public async System.Threading.Tasks.Task<Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse>> GetApprovalRequestWithHttpInfoAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            
            localVarRequestOptions.PathParameters.Add("id", Freee.Accounting.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "company_id", companyId));

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<ApprovalRequestResponse>("/api/1/approval_requests/{id}", localVarRequestOptions, this.Configuration, cancellationToken);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetApprovalRequest", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の申請フォームの取得  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォームを取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">申請フォームID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApprovalRequestFormResponse</returns>
        public ApprovalRequestFormResponse GetApprovalRequestForm (int id, int companyId)
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestFormResponse> localVarResponse = GetApprovalRequestFormWithHttpInfo(id, companyId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の申請フォームの取得  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォームを取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">申請フォームID</param>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApiResponse of ApprovalRequestFormResponse</returns>
        public Freee.Accounting.Client.ApiResponse< ApprovalRequestFormResponse > GetApprovalRequestFormWithHttpInfo (int id, int companyId)
        {
            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", Freee.Accounting.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "company_id", companyId));

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get< ApprovalRequestFormResponse >("/api/1/approval_requests/forms/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetApprovalRequestForm", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の申請フォームの取得  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォームを取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">申請フォームID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestFormResponse</returns>
        public async System.Threading.Tasks.Task<ApprovalRequestFormResponse> GetApprovalRequestFormAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestFormResponse> localVarResponse = await GetApprovalRequestFormWithHttpInfoAsync(id, companyId, cancellationToken);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の申請フォームの取得  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォームを取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">申請フォームID</param>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestFormResponse)</returns>
        public async System.Threading.Tasks.Task<Freee.Accounting.Client.ApiResponse<ApprovalRequestFormResponse>> GetApprovalRequestFormWithHttpInfoAsync (int id, int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            
            localVarRequestOptions.PathParameters.Add("id", Freee.Accounting.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "company_id", companyId));

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<ApprovalRequestFormResponse>("/api/1/approval_requests/forms/{id}", localVarRequestOptions, this.Configuration, cancellationToken);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetApprovalRequestForm", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の申請フォーム一覧の取得  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォーム一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <returns>InlineResponse200</returns>
        public InlineResponse200 GetApprovalRequestForms (int companyId)
        {
             Freee.Accounting.Client.ApiResponse<InlineResponse200> localVarResponse = GetApprovalRequestFormsWithHttpInfo(companyId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の申請フォーム一覧の取得  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォーム一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <returns>ApiResponse of InlineResponse200</returns>
        public Freee.Accounting.Client.ApiResponse< InlineResponse200 > GetApprovalRequestFormsWithHttpInfo (int companyId)
        {
            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "company_id", companyId));

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get< InlineResponse200 >("/api/1/approval_requests/forms", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetApprovalRequestForms", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の申請フォーム一覧の取得  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォーム一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of InlineResponse200</returns>
        public async System.Threading.Tasks.Task<InlineResponse200> GetApprovalRequestFormsAsync (int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
             Freee.Accounting.Client.ApiResponse<InlineResponse200> localVarResponse = await GetApprovalRequestFormsWithHttpInfoAsync(companyId, cancellationToken);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の申請フォーム一覧の取得  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の申請フォーム一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (InlineResponse200)</returns>
        public async System.Threading.Tasks.Task<Freee.Accounting.Client.ApiResponse<InlineResponse200>> GetApprovalRequestFormsWithHttpInfoAsync (int companyId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            
            localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "company_id", companyId));

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<InlineResponse200>("/api/1/approval_requests/forms", localVarRequestOptions, this.Configuration, cancellationToken);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetApprovalRequestForms", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の一覧  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の一覧を取得することができます。&lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="status">申請ステータス(draft:下書き, in_progress:申請中, approved:承認済, rejected:却下, feedback:差戻し) (optional)</param>
        /// <param name="applicationNumber">申請No. (optional)</param>
        /// <param name="title">申請タイトル (optional)</param>
        /// <param name="formId">申請フォームID (optional)</param>
        /// <param name="startApplicationDate">申請日で絞込：開始日(yyyy-mm-dd) (optional)</param>
        /// <param name="endApplicationDate">申請日で絞込：終了日(yyyy-mm-dd) (optional)</param>
        /// <param name="applicantId">申請者のユーザーID (optional)</param>
        /// <param name="approverId">承認者のユーザーID (optional)</param>
        /// <param name="offset">取得レコードのオフセット (デフォルト: 0) (optional)</param>
        /// <param name="limit">取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 500) (optional)</param>
        /// <returns>ApprovalRequestsIndexResponse</returns>
        public ApprovalRequestsIndexResponse GetApprovalRequests (int companyId, string status = default(string), int? applicationNumber = default(int?), string title = default(string), int? formId = default(int?), string startApplicationDate = default(string), string endApplicationDate = default(string), int? applicantId = default(int?), int? approverId = default(int?), int? offset = default(int?), int? limit = default(int?))
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestsIndexResponse> localVarResponse = GetApprovalRequestsWithHttpInfo(companyId, status, applicationNumber, title, formId, startApplicationDate, endApplicationDate, applicantId, approverId, offset, limit);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の一覧  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の一覧を取得することができます。&lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="status">申請ステータス(draft:下書き, in_progress:申請中, approved:承認済, rejected:却下, feedback:差戻し) (optional)</param>
        /// <param name="applicationNumber">申請No. (optional)</param>
        /// <param name="title">申請タイトル (optional)</param>
        /// <param name="formId">申請フォームID (optional)</param>
        /// <param name="startApplicationDate">申請日で絞込：開始日(yyyy-mm-dd) (optional)</param>
        /// <param name="endApplicationDate">申請日で絞込：終了日(yyyy-mm-dd) (optional)</param>
        /// <param name="applicantId">申請者のユーザーID (optional)</param>
        /// <param name="approverId">承認者のユーザーID (optional)</param>
        /// <param name="offset">取得レコードのオフセット (デフォルト: 0) (optional)</param>
        /// <param name="limit">取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 500) (optional)</param>
        /// <returns>ApiResponse of ApprovalRequestsIndexResponse</returns>
        public Freee.Accounting.Client.ApiResponse< ApprovalRequestsIndexResponse > GetApprovalRequestsWithHttpInfo (int companyId, string status = default(string), int? applicationNumber = default(int?), string title = default(string), int? formId = default(int?), string startApplicationDate = default(string), string endApplicationDate = default(string), int? applicantId = default(int?), int? approverId = default(int?), int? offset = default(int?), int? limit = default(int?))
        {
            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "company_id", companyId));
            if (status != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "status", status));
            }
            if (applicationNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "application_number", applicationNumber));
            }
            if (title != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "title", title));
            }
            if (formId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "form_id", formId));
            }
            if (startApplicationDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "start_application_date", startApplicationDate));
            }
            if (endApplicationDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "end_application_date", endApplicationDate));
            }
            if (applicantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "applicant_id", applicantId));
            }
            if (approverId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "approver_id", approverId));
            }
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get< ApprovalRequestsIndexResponse >("/api/1/approval_requests", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetApprovalRequests", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の一覧  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の一覧を取得することができます。&lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="status">申請ステータス(draft:下書き, in_progress:申請中, approved:承認済, rejected:却下, feedback:差戻し) (optional)</param>
        /// <param name="applicationNumber">申請No. (optional)</param>
        /// <param name="title">申請タイトル (optional)</param>
        /// <param name="formId">申請フォームID (optional)</param>
        /// <param name="startApplicationDate">申請日で絞込：開始日(yyyy-mm-dd) (optional)</param>
        /// <param name="endApplicationDate">申請日で絞込：終了日(yyyy-mm-dd) (optional)</param>
        /// <param name="applicantId">申請者のユーザーID (optional)</param>
        /// <param name="approverId">承認者のユーザーID (optional)</param>
        /// <param name="offset">取得レコードのオフセット (デフォルト: 0) (optional)</param>
        /// <param name="limit">取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 500) (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestsIndexResponse</returns>
        public async System.Threading.Tasks.Task<ApprovalRequestsIndexResponse> GetApprovalRequestsAsync (int companyId, string status = default(string), int? applicationNumber = default(int?), string title = default(string), int? formId = default(int?), string startApplicationDate = default(string), string endApplicationDate = default(string), int? applicantId = default(int?), int? approverId = default(int?), int? offset = default(int?), int? limit = default(int?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestsIndexResponse> localVarResponse = await GetApprovalRequestsWithHttpInfoAsync(companyId, status, applicationNumber, title, formId, startApplicationDate, endApplicationDate, applicantId, approverId, offset, limit, cancellationToken);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の一覧  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請一覧を取得する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の一覧を取得することができます。&lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請と申請経路はAPI経由で参照は可能ですが、作成と更新、承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="companyId">事業所ID</param>
        /// <param name="status">申請ステータス(draft:下書き, in_progress:申請中, approved:承認済, rejected:却下, feedback:差戻し) (optional)</param>
        /// <param name="applicationNumber">申請No. (optional)</param>
        /// <param name="title">申請タイトル (optional)</param>
        /// <param name="formId">申請フォームID (optional)</param>
        /// <param name="startApplicationDate">申請日で絞込：開始日(yyyy-mm-dd) (optional)</param>
        /// <param name="endApplicationDate">申請日で絞込：終了日(yyyy-mm-dd) (optional)</param>
        /// <param name="applicantId">申請者のユーザーID (optional)</param>
        /// <param name="approverId">承認者のユーザーID (optional)</param>
        /// <param name="offset">取得レコードのオフセット (デフォルト: 0) (optional)</param>
        /// <param name="limit">取得レコードの件数 (デフォルト: 50, 最小: 1, 最大: 500) (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestsIndexResponse)</returns>
        public async System.Threading.Tasks.Task<Freee.Accounting.Client.ApiResponse<ApprovalRequestsIndexResponse>> GetApprovalRequestsWithHttpInfoAsync (int companyId, string status = default(string), int? applicationNumber = default(int?), string title = default(string), int? formId = default(int?), string startApplicationDate = default(string), string endApplicationDate = default(string), int? applicantId = default(int?), int? approverId = default(int?), int? offset = default(int?), int? limit = default(int?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            
            localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "company_id", companyId));
            if (status != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "status", status));
            }
            if (applicationNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "application_number", applicationNumber));
            }
            if (title != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "title", title));
            }
            if (formId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "form_id", formId));
            }
            if (startApplicationDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "start_application_date", startApplicationDate));
            }
            if (endApplicationDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "end_application_date", endApplicationDate));
            }
            if (applicantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "applicant_id", applicantId));
            }
            if (approverId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "approver_id", approverId));
            }
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(Freee.Accounting.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<ApprovalRequestsIndexResponse>("/api/1/approval_requests", localVarRequestOptions, this.Configuration, cancellationToken);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetApprovalRequests", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の更新  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を更新する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を更新することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、各種申請の取得APIで取得したrequest_items.idとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIでは、status(申請ステータス): draft:下書き, feedback:差戻しのみ更新可能です。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で更新ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本APIで使用する項目IDは申請作成時点の項目IDです。本API利用前に各種申請の取得APIを利用し、申請作成時点の項目IDを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestUpdateParams">各種申請の更新</param>
        /// <returns>ApprovalRequestResponse</returns>
        public ApprovalRequestResponse UpdateApprovalRequest (int id, ApprovalRequestUpdateParams approvalRequestUpdateParams)
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse> localVarResponse = UpdateApprovalRequestWithHttpInfo(id, approvalRequestUpdateParams);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の更新  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を更新する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を更新することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、各種申請の取得APIで取得したrequest_items.idとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIでは、status(申請ステータス): draft:下書き, feedback:差戻しのみ更新可能です。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で更新ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本APIで使用する項目IDは申請作成時点の項目IDです。本API利用前に各種申請の取得APIを利用し、申請作成時点の項目IDを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestUpdateParams">各種申請の更新</param>
        /// <returns>ApiResponse of ApprovalRequestResponse</returns>
        public Freee.Accounting.Client.ApiResponse< ApprovalRequestResponse > UpdateApprovalRequestWithHttpInfo (int id, ApprovalRequestUpdateParams approvalRequestUpdateParams)
        {
            // verify the required parameter 'approvalRequestUpdateParams' is set
            if (approvalRequestUpdateParams == null)
                throw new Freee.Accounting.Client.ApiException(400, "Missing required parameter 'approvalRequestUpdateParams' when calling ApprovalRequestsApi->UpdateApprovalRequest");

            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json", 
                "application/x-www-form-urlencoded"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", Freee.Accounting.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.Data = approvalRequestUpdateParams;

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Put< ApprovalRequestResponse >("/api/1/approval_requests/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateApprovalRequest", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の更新  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を更新する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を更新することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、各種申請の取得APIで取得したrequest_items.idとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIでは、status(申請ステータス): draft:下書き, feedback:差戻しのみ更新可能です。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で更新ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本APIで使用する項目IDは申請作成時点の項目IDです。本API利用前に各種申請の取得APIを利用し、申請作成時点の項目IDを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestUpdateParams">各種申請の更新</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestResponse</returns>
        public async System.Threading.Tasks.Task<ApprovalRequestResponse> UpdateApprovalRequestAsync (int id, ApprovalRequestUpdateParams approvalRequestUpdateParams, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse> localVarResponse = await UpdateApprovalRequestWithHttpInfoAsync(id, approvalRequestUpdateParams, cancellationToken);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の更新  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請を更新する&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請を更新することができます。&lt;/li&gt;   &lt;li&gt;     申請項目(request_items)については、各種申請の取得APIで取得したrequest_items.idとそれに対応する値を入力してください。     &lt;ul&gt;       &lt;li&gt;タイトル(title)：文字列(改行なし) 例)予算申請&lt;/li&gt;       &lt;li&gt;1行コメント(single_line)：文字列(改行なし) 例)予算に関する申請&lt;/li&gt;       &lt;li&gt;複数行コメント(multi_line)：文字列(改行あり)       &lt;br&gt;       &amp;nbsp;&amp;nbsp;例)&lt;br&gt;       &amp;nbsp;&amp;nbsp;予算に関する申請&lt;br&gt;       &amp;nbsp;&amp;nbsp;申請日 2020-01-01&lt;br&gt;       &lt;/li&gt;       &lt;li&gt;プルダウン(select)： プルダウンの選択肢の名前(改行なし) 例)開発部&lt;/li&gt;       &lt;li&gt;日付(date)： 日付形式 例)2020-01-01&lt;/li&gt;       &lt;li&gt;金額(amount)： 数値(申請フォームで設定した上限・下限金額内の値, 改行なし) 例)10000&lt;/li&gt;       &lt;li&gt;添付ファイル(receipt)： ファイルボックスAPIのID 例)1&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIでは、status(申請ステータス): draft:下書き, feedback:差戻しのみ更新可能です。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請は本API経由で更新ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;Web画面やAPIを通じて申請フォームが変更されると、本APIで使用する項目ID（request_itemsで指定するid）も変更されます。本APIで使用する項目IDは申請作成時点の項目IDです。本API利用前に各種申請の取得APIを利用し、申請作成時点の項目IDを取得することを推奨します。&lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestUpdateParams">各種申請の更新</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestResponse)</returns>
        public async System.Threading.Tasks.Task<Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse>> UpdateApprovalRequestWithHttpInfoAsync (int id, ApprovalRequestUpdateParams approvalRequestUpdateParams, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'approvalRequestUpdateParams' is set
            if (approvalRequestUpdateParams == null)
                throw new Freee.Accounting.Client.ApiException(400, "Missing required parameter 'approvalRequestUpdateParams' when calling ApprovalRequestsApi->UpdateApprovalRequest");


            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json", 
                "application/x-www-form-urlencoded"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            
            localVarRequestOptions.PathParameters.Add("id", Freee.Accounting.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.Data = approvalRequestUpdateParams;

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PutAsync<ApprovalRequestResponse>("/api/1/approval_requests/{id}", localVarRequestOptions, this.Configuration, cancellationToken);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateApprovalRequest", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の承認操作  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の承認操作を行う&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）を行うことができます。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; 　&lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請はAPI経由で承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestActionCreateParams">各種申請の承認操作</param>
        /// <returns>ApprovalRequestResponse</returns>
        public ApprovalRequestResponse UpdateApprovalRequestAction (int id, ApprovalRequestActionCreateParams approvalRequestActionCreateParams)
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse> localVarResponse = UpdateApprovalRequestActionWithHttpInfo(id, approvalRequestActionCreateParams);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の承認操作  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の承認操作を行う&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）を行うことができます。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; 　&lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請はAPI経由で承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestActionCreateParams">各種申請の承認操作</param>
        /// <returns>ApiResponse of ApprovalRequestResponse</returns>
        public Freee.Accounting.Client.ApiResponse< ApprovalRequestResponse > UpdateApprovalRequestActionWithHttpInfo (int id, ApprovalRequestActionCreateParams approvalRequestActionCreateParams)
        {
            // verify the required parameter 'approvalRequestActionCreateParams' is set
            if (approvalRequestActionCreateParams == null)
                throw new Freee.Accounting.Client.ApiException(400, "Missing required parameter 'approvalRequestActionCreateParams' when calling ApprovalRequestsApi->UpdateApprovalRequestAction");

            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json", 
                "application/x-www-form-urlencoded"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", Freee.Accounting.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.Data = approvalRequestActionCreateParams;

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post< ApprovalRequestResponse >("/api/1/approval_requests/{id}/actions", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateApprovalRequestAction", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 各種申請の承認操作  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の承認操作を行う&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）を行うことができます。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; 　&lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請はAPI経由で承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestActionCreateParams">各種申請の承認操作</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApprovalRequestResponse</returns>
        public async System.Threading.Tasks.Task<ApprovalRequestResponse> UpdateApprovalRequestActionAsync (int id, ApprovalRequestActionCreateParams approvalRequestActionCreateParams, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
             Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse> localVarResponse = await UpdateApprovalRequestActionWithHttpInfoAsync(id, approvalRequestActionCreateParams, cancellationToken);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 各種申請の承認操作  &lt;h2 id&#x3D;\&quot;_1\&quot;&gt;概要&lt;/h2&gt;  &lt;p&gt;指定した事業所の各種申請の承認操作を行う&lt;/p&gt;  &lt;p&gt;各種申請APIの使い方については、&lt;a href&#x3D;\&quot;https://developer.freee.co.jp/tips/accounting-approval-requests\&quot; target&#x3D;\&quot;_blank\&quot;&gt;会計freeeの各種申請APIの使い方&lt;/a&gt;をご参照ください&lt;/p&gt;  &lt;h2 id&#x3D;\&quot;_2\&quot;&gt;注意点&lt;/h2&gt; &lt;ul&gt;   &lt;li&gt;本APIでは、各種申請の承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）を行うことができます。&lt;/li&gt;   &lt;li&gt;     申請ステータス(下書き、申請中)の指定と変更、及び承認操作（承認する、却下する、申請者へ差し戻す、代理承認する、承認済み・却下済みを取り消す）は以下を参考にして行ってください。     &lt;ul&gt;       &lt;li&gt;         承認操作は申請ステータスが申請中、承認済み、却下のものだけが対象です。         &lt;ul&gt;           &lt;li&gt;             初回申請の場合             &lt;ul&gt;&lt;li&gt;申請の作成（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             作成済みの申請の申請ステータス変更・更新する場合             &lt;ul&gt;&lt;li&gt;申請の更新（PUT）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;           &lt;li&gt;             申請中、承認済み、却下の申請の承認操作を行う場合             &lt;ul&gt;&lt;li&gt;承認操作の実行（POST）&lt;/li&gt;&lt;/ul&gt;           &lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt;       &lt;li&gt;申請の削除（DELETE）が可能なのは申請ステータスが下書き、差戻しの場合のみです&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; 　&lt;li&gt;     申請経路、承認者の指定として部門役職データ連携を活用し、以下のいずれかを利用している各種申請はAPI経由で承認ステータスの変更ができません。     &lt;ul&gt;       &lt;li&gt;役職指定（申請者の所属部門）&lt;/li&gt;       &lt;li&gt;役職指定（申請時に部門指定）&lt;/li&gt;       &lt;li&gt;部門および役職指定&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;   &lt;li&gt;本APIはエンタープライズプランをご利用の事業所のみ利用可能です。&lt;/li&gt; &lt;/ul&gt;
        /// </summary>
        /// <exception cref="Freee.Accounting.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">各種申請ID</param>
        /// <param name="approvalRequestActionCreateParams">各種申請の承認操作</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ApprovalRequestResponse)</returns>
        public async System.Threading.Tasks.Task<Freee.Accounting.Client.ApiResponse<ApprovalRequestResponse>> UpdateApprovalRequestActionWithHttpInfoAsync (int id, ApprovalRequestActionCreateParams approvalRequestActionCreateParams, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'approvalRequestActionCreateParams' is set
            if (approvalRequestActionCreateParams == null)
                throw new Freee.Accounting.Client.ApiException(400, "Missing required parameter 'approvalRequestActionCreateParams' when calling ApprovalRequestsApi->UpdateApprovalRequestAction");


            Freee.Accounting.Client.RequestOptions localVarRequestOptions = new Freee.Accounting.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json", 
                "application/x-www-form-urlencoded"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Freee.Accounting.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Freee.Accounting.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            
            localVarRequestOptions.PathParameters.Add("id", Freee.Accounting.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.Data = approvalRequestActionCreateParams;

            // authentication (oauth2) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<ApprovalRequestResponse>("/api/1/approval_requests/{id}/actions", localVarRequestOptions, this.Configuration, cancellationToken);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateApprovalRequestAction", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
